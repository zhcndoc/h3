[{"data":1,"prerenderedAt":3350},["ShallowReactive",2],{"navigation":3,"/blog":185,"$mP6kfxjOiC":203},[4,91,133,161,168],{"title":5,"path":6,"stem":7,"children":8,"icon":90},"Guide","/guide","1.guide/0.index",[9,12,53,69],{"title":10,"path":6,"stem":7,"icon":11},"入门指南","pixel:play",{"title":5,"icon":13,"path":14,"stem":15,"children":16,"page":52},"ph:book-open-duotone","/guide/basics","1.guide/1.basics",[17,22,27,32,37,42,47],{"title":18,"path":19,"stem":20,"icon":21},"请求生命周期","/guide/basics/lifecycle","1.guide/1.basics/1.lifecycle","icon-park-outline:handle-round",{"title":23,"path":24,"stem":25,"icon":26},"路由","/guide/basics/routing","1.guide/1.basics/2.routing","solar:routing-bold",{"title":28,"path":29,"stem":30,"icon":31},"中间件","/guide/basics/middleware","1.guide/1.basics/3.middleware","mdi:middleware-outline",{"title":33,"path":34,"stem":35,"icon":36},"事件处理器","/guide/basics/handler","1.guide/1.basics/4.handler","mdi:function",{"title":38,"path":39,"stem":40,"icon":41},"发送响应","/guide/basics/response","1.guide/1.basics/5.response","tabler:json",{"title":43,"path":44,"stem":45,"icon":46},"错误处理","/guide/basics/error","1.guide/1.basics/6.error","tabler:error-404",{"title":48,"path":49,"stem":50,"icon":51},"嵌套应用","/guide/basics/nested-apps","1.guide/1.basics/7.nested-apps","material-symbols-light:layers-outline",false,{"title":54,"icon":55,"path":56,"stem":57,"children":58,"page":52},"API","material-symbols-light:api-rounded","/guide/api","1.guide/900.api",[59,64],{"title":60,"path":61,"stem":62,"icon":63},"H3","/guide/api/h3","1.guide/900.api/1.h3","material-symbols:bolt-rounded",{"title":65,"path":66,"stem":67,"icon":68},"H3Event","/guide/api/h3event","1.guide/900.api/2.h3event","material-symbols:data-object-rounded",{"title":70,"icon":71,"path":72,"stem":73,"children":74,"page":52},"Advanced","hugeicons:more-01","/guide/advanced","1.guide/901.advanced",[75,80,85],{"title":76,"path":77,"stem":78,"icon":79},"Plugins","/guide/advanced/plugins","1.guide/901.advanced/1.plugins","clarity:plugin-line",{"title":81,"path":82,"stem":83,"icon":84},"WebSockets","/guide/advanced/websocket","1.guide/901.advanced/2.websocket","hugeicons:live-streaming-02",{"title":86,"path":87,"stem":88,"icon":89},"每夜构建","/guide/advanced/nightly","1.guide/901.advanced/9.nightly","game-icons:barn-owl","i-ph:book-open-duotone",{"title":92,"path":93,"stem":94,"children":95,"icon":97},"H3 工具集","/utils","2.utils/0.index",[96,98,103,108,113,118,123,128],{"title":92,"path":93,"stem":94,"icon":97},"ph:function-bold",{"title":99,"path":100,"stem":101,"icon":102},"请求","/utils/request","2.utils/1.request","material-symbols-light:input",{"title":104,"path":105,"stem":106,"icon":107},"响应","/utils/response","2.utils/2.response","material-symbols-light:output",{"title":109,"path":110,"stem":111,"icon":112},"Cookie","/utils/cookie","2.utils/3.cookie","material-symbols:cookie-outline",{"title":114,"path":115,"stem":116,"icon":117},"安全","/utils/security","2.utils/4.security","wpf:key-security",{"title":119,"path":120,"stem":121,"icon":122},"代理","/utils/proxy","2.utils/5.proxy","arcticons:super-proxy",{"title":124,"path":125,"stem":126,"icon":127},"更多工具","/utils/more","2.utils/9.more","mingcute:plus-line",{"title":129,"path":130,"stem":131,"icon":132},"社区","/utils/community","2.utils/99.community","lets-icons:external",{"title":134,"path":135,"stem":136,"children":137,"icon":139},"示例","/examples","4.examples/0.index",[138,140,145,149,153,157],{"title":134,"path":135,"stem":136,"icon":139},"ph:code",{"title":141,"path":142,"stem":143,"icon":144},"Cookies","/examples/handle-cookie","4.examples/handle-cookie","ph:arrow-right",{"title":146,"path":147,"stem":148,"icon":144},"会话","/examples/handle-session","4.examples/handle-session",{"title":150,"path":151,"stem":152,"icon":144},"静态资源","/examples/serve-static-assets","4.examples/serve-static-assets",{"title":154,"path":155,"stem":156,"icon":144},"流式响应","/examples/stream-response","4.examples/stream-response",{"title":158,"path":159,"stem":160,"icon":144},"验证数据","/examples/validate-data","4.examples/validate-data",{"title":162,"path":163,"stem":164,"children":165,"icon":167},"从 v1 到 v2 的迁移指南","/migration","5.migration/0.index",[166],{"title":162,"path":163,"stem":164,"icon":167},"icons8:up-round",{"title":169,"path":170,"stem":171,"children":172,"page":-1},"Blog","/blog","99.blog",[173,177,181],{"title":174,"path":170,"stem":175,"icon":176},"博客","99.blog/index","i-lucide-file-text",{"title":178,"path":179,"stem":180,"icon":176},"H3 1.8 - 迈向 Web 的边缘","/blog/v1.8","99.blog/1.v1.8",{"title":182,"path":183,"stem":184,"icon":176},"H3 v2 测试版","/blog/v2-beta","99.blog/2.v2-beta",{"id":186,"title":174,"body":187,"description":195,"extension":198,"meta":199,"navigation":200,"path":170,"seo":201,"stem":175,"__hash__":202},"content/99.blog/index.md",{"type":188,"value":189,"toc":194,"icon":176},"minimark",[190],[191,192,193],"p",{},"H3 版本亮点。",{"title":195,"searchDepth":196,"depth":196,"links":197},"",2,[],"md",{"icon":176},{"icon":176},{"title":174,"description":195},"WF7aQJo0i9QeNXKB9dozU8cjAtC9oEC2PWpgBYClO_A",[204,2134],{"id":205,"title":182,"body":206,"description":2123,"extension":198,"meta":2124,"navigation":2131,"path":183,"seo":2132,"stem":184,"__hash__":2133},"content/99.blog/2.v2-beta.md",{"type":188,"value":207,"toc":2112,"icon":176},[208,222,242,245,272,291,296,339,350,359,492,502,506,509,557,634,638,641,753,766,782,786,808,817,1109,1118,1172,1177,1181,1194,1199,1951,1959,1963,1966,1974,1978,2004,2007,2013,2045,2049,2066,2070,2075,2090,2100,2108],[209,210,211],"read-more",{"to":6},[191,212,213,214,221],{},"访问新的 ",[215,216,217],"a",{"href":6},[218,219,220],"strong",{},"H3 指南"," 快速入门。",[191,223,224,225,231,232,237,238,241],{},"H3 起始于 2020 年末，正值边缘工作者（edge workers）兴起之时。结合 H3 + ",[215,226,230],{"href":227,"rel":228},"https://github.com/unjs/unenv",[229],"nofollow","unjs/unenv","，我们可以在带有 Node.js 兼容性的工作者环境中运行 ",[215,233,236],{"href":234,"rel":235},"https://nitro.build",[229],"Nitro"," 部署，兼具两者优势！自从 ",[215,239,240],{"href":179},"v1.8"," 起，H3 已经提升了对 web 标准的支持。",[191,243,244],{},"不过，H3 仍然主要基于 Node.js API，带有 web 标准的兼容层。当时这是合乎逻辑的选择，因为 Node.js 在 JavaScript 服务器运行时中非常受欢迎。",[191,246,247,248,253,254,259,260,265,266,271],{},"得益于像 ",[215,249,252],{"href":250,"rel":251},"https://wintertc.org/",[229],"WinterTC"," 这样持续发展的 web 标准，以及在 ",[215,255,258],{"href":256,"rel":257},"https://deno.com/",[229],"Deno","、",[215,261,264],{"href":262,"rel":263},"https://bun.sh/",[229],"Bun"," 和最新的 ",[215,267,270],{"href":268,"rel":269},"https://nodejs.org/en",[229],"Node.js"," 中的运行时支持，生态系统已准备好优先采用 web 标准进行服务器开发。其优势包括：",[273,274,275,279,282,285,288],"ul",{},[276,277,278],"li",{},"跨运行时互操作性（Node.js、Deno、Bun、Workers 等）",[276,280,281],{},"跨框架兼容性（H3、Hono、Elysia 等）",[276,283,284],{},"跨环境兼容性（前后端共享且熟悉的代码）",[276,286,287],{},"利用更多运行时原生原语，如 (Request、URL、Headers 等)",[276,289,290],{},"更易进行 API 测试",[292,293,295],"h2",{"id":294},"srvx通用-web-服务器-api","💥 srvx：通用 Web 服务器 API",[191,297,298,299,303,304,307,308,311,312,315,316,319,320,325,326,332,333,338],{},"一个主要挑战是 Node.js 缺少对 web 标准 HTTP 服务器的内置支持。为了实现 ",[300,301,302],"code",{},"node:http"," 兼容，需要一个适配器将 Node.js 的 ",[300,305,306],{},"IncomingMessage"," 转换为 web 的 ",[300,309,310],{},"Request","，并通过 Node.js 的 ",[300,313,314],{},"ServerResponse"," 处理 web 的 ",[300,317,318],{},"Response","。我们实现了一个",[215,321,324],{"href":322,"rel":323},"https://srvx.h3.dev/guide/node",[229],"兼容层","，桥接接口，并达到",[218,327,328,329,331],{},"原生 ",[300,330,302],{}," 性能的 96.98%","（详见",[215,334,337],{"href":335,"rel":336},"https://github.com/h3js/srvx/tree/main/test/bench-node",[229],"基准测试","）。",[191,340,341,259,345,349],{},[215,342,344],{"href":256,"rel":343},[229]," Deno ",[215,346,348],{"href":262,"rel":347},[229]," Bun "," 和边缘工作者等运行时率先采用 web 标准服务器，但由于缺乏足够的规范，它们并未统一接口。那么你如何访问客户端 IP 地址及额外上下文？如何设置服务器端口和 TLS 选项？如何处理 WebSocket 升级？各运行时都创建了自己的 API。",[191,351,352,353,358],{},"我们创建了 ",[215,354,357],{"href":355,"rel":356},"https://srvx.h3.dev",[229],"💥 srvx","：一个统一的层，在所有环境中均表现一致。兼容 Deno、Bun、Node.js、Service Workers、Edge Workers。",[360,361,362,365],"details",{},[363,364,134],"summary",{},[366,367,371],"pre",{"className":368,"code":369,"language":370,"meta":195,"style":195},"language-js shiki shiki-themes github-light github-dark github-dark","// 根据各运行时的导出条件，动态使用适配器\nimport { serve } from \"srvx\";\n\nserve({\n  port: 3000,\n  // tls: { cert: \"server.crt\", key: \"server.key\" }\n  fetch(req) {\n    // 服务器扩展：req.ip, req.waitUntil(), req.runtime?.{bun,deno,node,cloudflare,...}\n    return new Response(\"👋 你好！\");\n  },\n});\n","js",[300,372,373,382,402,409,419,432,438,454,460,480,486],{"__ignoreMap":195},[374,375,378],"span",{"class":376,"line":377},"line",1,[374,379,381],{"class":380},"sCsY4","// 根据各运行时的导出条件，动态使用适配器\n",[374,383,384,388,392,395,399],{"class":376,"line":196},[374,385,387],{"class":386},"so5gQ","import",[374,389,391],{"class":390},"slsVL"," { serve } ",[374,393,394],{"class":386},"from",[374,396,398],{"class":397},"sfrk1"," \"srvx\"",[374,400,401],{"class":390},";\n",[374,403,405],{"class":376,"line":404},3,[374,406,408],{"emptyLinePlaceholder":407},true,"\n",[374,410,412,416],{"class":376,"line":411},4,[374,413,415],{"class":414},"shcOC","serve",[374,417,418],{"class":390},"({\n",[374,420,422,425,429],{"class":376,"line":421},5,[374,423,424],{"class":390},"  port: ",[374,426,428],{"class":427},"suiK_","3000",[374,430,431],{"class":390},",\n",[374,433,435],{"class":376,"line":434},6,[374,436,437],{"class":380},"  // tls: { cert: \"server.crt\", key: \"server.key\" }\n",[374,439,441,444,447,451],{"class":376,"line":440},7,[374,442,443],{"class":414},"  fetch",[374,445,446],{"class":390},"(",[374,448,450],{"class":449},"sQHwn","req",[374,452,453],{"class":390},") {\n",[374,455,457],{"class":376,"line":456},8,[374,458,459],{"class":380},"    // 服务器扩展：req.ip, req.waitUntil(), req.runtime?.{bun,deno,node,cloudflare,...}\n",[374,461,463,466,469,472,474,477],{"class":376,"line":462},9,[374,464,465],{"class":386},"    return",[374,467,468],{"class":386}," new",[374,470,471],{"class":414}," Response",[374,473,446],{"class":390},[374,475,476],{"class":397},"\"👋 你好！\"",[374,478,479],{"class":390},");\n",[374,481,483],{"class":376,"line":482},10,[374,484,485],{"class":390},"  },\n",[374,487,489],{"class":376,"line":488},11,[374,490,491],{"class":390},"});\n",[493,494,495],"tip",{},[191,496,497,498,501],{},"\n借助 ",[215,499,357],{"href":355,"rel":500},[229]," 统一运行时差异，H3 可以保持简洁，专注于 web 标准 API 。",[292,503,505],{"id":504},"h3微型服务器组合器","⚡ H3：微型服务器组合器 🎶",[191,507,508],{},"我们努力缩小并简化 H3 的功能范围。",[273,510,511,518,531,539,544,550],{},[276,512,513,514],{},"🪶 性能优化，比羽毛还轻量。",[215,515,517],{"href":516},"#lighter-than-a-feather","更轻量",[276,519,520,521,259,524,526,527,530],{},"👌 直观的 ",[215,522,523],{"href":34},"类型化处理器",[215,525,104],{"href":39}," 和 ",[215,528,529],{"href":44},"错误","。",[276,532,533,534,526,536,530],{},"🧩 可复用的 ",[215,535,28],{"href":29},[215,537,538],{"href":77},"插件",[276,540,541,542,530],{},"🌳 快速的 ",[215,543,23],{"href":24},[276,545,546,547,530],{},"➕ 内置的 ",[215,548,549],{"href":93},"实用工具",[276,551,552,553,530],{},"❤️ 基于 web 标准实现最高的 ",[215,554,556],{"href":555},"/guide/api/h3#h3mount","兼容性",[366,558,560],{"className":368,"code":559,"language":370,"meta":195,"style":195},"import { H3, serve } from \"h3\";\n\nconst app = new H3().get(\"/\", () => \"⚡️ Tadaa!\");\n\nserve(app, { port: 3000 });\n",[300,561,562,576,580,618,622],{"__ignoreMap":195},[374,563,564,566,569,571,574],{"class":376,"line":377},[374,565,387],{"class":386},[374,567,568],{"class":390}," { H3, serve } ",[374,570,394],{"class":386},[374,572,573],{"class":397}," \"h3\"",[374,575,401],{"class":390},[374,577,578],{"class":376,"line":196},[374,579,408],{"emptyLinePlaceholder":407},[374,581,582,585,588,591,593,596,599,602,604,607,610,613,616],{"class":376,"line":404},[374,583,584],{"class":386},"const",[374,586,587],{"class":427}," app",[374,589,590],{"class":386}," =",[374,592,468],{"class":386},[374,594,595],{"class":414}," H3",[374,597,598],{"class":390},"().",[374,600,601],{"class":414},"get",[374,603,446],{"class":390},[374,605,606],{"class":397},"\"/\"",[374,608,609],{"class":390},", () ",[374,611,612],{"class":386},"=>",[374,614,615],{"class":397}," \"⚡️ Tadaa!\"",[374,617,479],{"class":390},[374,619,620],{"class":376,"line":411},[374,621,408],{"emptyLinePlaceholder":407},[374,623,624,626,629,631],{"class":376,"line":421},[374,625,415],{"class":414},[374,627,628],{"class":390},"(app, { port: ",[374,630,428],{"class":427},[374,632,633],{"class":390}," });\n",[292,635,637],{"id":636},"比羽毛还轻","🪶 比羽毛还轻",[191,639,640],{},"我们采用了一种新的基准测试方法，着重衡量框架本身引入的开销，而不是网络层。我们的目标是优化所有相关指标，使结果尽可能接近无框架基线。这种方法使 H3 在每个请求的延迟上得到优化提升，并极大缩小了核心包的体积。",[642,643,644,660],"table",{},[645,646,647],"thead",{},[648,649,650,654,657],"tr",{},[651,652,653],"th",{},"测量项",[651,655,656],{},"H3 v1",[651,658,659],{},"🚀 H3 v2",[661,662,663,709],"tbody",{},[648,664,665,669,679],{},[666,667,668],"td",{},"请求处理时间",[666,670,671,672,675,676,678],{},"Node: 36 µs ",[673,674],"br",{}," Bun: 27 µs ",[673,677],{}," Deno: 7 ms",[666,680,681,682,685,686,689,690,692,693,685,696,689,699,701,702,685,705,708],{},"Node: ",[218,683,684],{},"7 µs"," （",[218,687,688],{},"快5倍","） ",[673,691],{}," Bun: ",[218,694,695],{},"3 µs",[218,697,698],{},"快9倍",[673,700],{}," Deno: ",[218,703,704],{},"1.2 µs",[218,706,707],{},"快156倍","）",[648,710,711,714,720],{},[666,712,713],{},"包体积",[666,715,716,717,719],{},"最小: 101 kB ",[673,718],{}," 最小+gzip: 39.6 kB",[666,721,722,723,685,726,689,729,731,732,685,735,689,738,740,741,744,745,685,748,752],{},"最小: ",[218,724,725],{},"9.1 kB",[218,727,728],{},"小91%",[673,730],{}," 最小+gzip: ",[218,733,734],{},"3.6 kB",[218,736,737],{},"小90%",[673,739],{}," 最小: ",[218,742,743],{},"5.2 kB"," / 最小+gzip: ",[218,746,747],{},"2.1 kB",[215,749,751],{"href":750},"/guide/basics/handler#handler-fetch","fetchable"," 处理器）",[493,754,755],{},[191,756,757,758,761,762,765],{},"\nH3 v2 的性能几乎等同于使用 ",[300,759,760],{},"new URL(req.url).pathname"," 进行路由的纯 ",[300,763,764],{},"fetch"," 处理器。换句话说，使用 H3 基本没有性能损耗！",[767,768,769],"note",{},[191,770,771,772,777,778,530],{},"\n基准测试针对使用 Web Standard 目标的 H3 核心，不包含适配器。主要用于内部优化。详情参见 ",[215,773,776],{"href":774,"rel":775},"https://github.com/h3js/h3/tree/main/test/bench",[229],"benchmark"," 和 Node.js 适配器性能的 ",[215,779,781],{"href":335,"rel":780},[229],"srvx benchmarks",[292,783,785],{"id":784},"类型化-web-标准","✅ 类型化 Web 标准",[191,787,788,789,259,793,259,797,526,802,807],{},"H3 采用 web 标准 API，如 ",[215,790,310],{"href":791,"rel":792},"https://developer.mozilla.org/en-US/docs/Web/API/Request",[229],[215,794,318],{"href":795,"rel":796},"https://developer.mozilla.org/en-US/docs/Web/API/Response",[229],[215,798,801],{"href":799,"rel":800},"https://developer.mozilla.org/en-US/docs/Web/API/URL",[229],"URL",[215,803,806],{"href":804,"rel":805},"https://developer.mozilla.org/en-US/docs/Web/API/Headers",[229],"Headers","，不在标准之上引入新约定。",[191,809,810,811,816],{},"我们发起了一项强类型 Web API 的新计划：",[215,812,815],{"href":813,"rel":814},"https://github.com/unjs/fetchdts",[229],"✅ fetchdts","。已集成到 H3 中，将标准与类型便利性完美结合。",[366,818,820],{"className":368,"code":819,"language":370,"meta":195,"style":195},"import { defineHandler } from \"h3\";\n\nconst handler = defineHandler(async (event) => {\n  // URL 解析\n  const { pathname, searchParams } = event.url;\n\n  // 访问请求头（编辑器中试试自动补全！）\n  const accept = event.req.headers.get(\"Accept\");\n\n  // 读取请求体\n  const bodyStream = await event.req.body;\n  const bodyText = await event.req.text();\n  const bodyJSON = await event.req.json();\n  const bodyFormData = await event.req.formData();\n\n  // 访问运行时特定上下文\n  const { deno, bun, node } = event.req.runtime;\n\n  // 准备响应（h3 会智能处理）\n  event.res.headers.set(\"Content-Type\", \"application/json\");\n\n  return { hello: \"web\" };\n});\n",[300,821,822,835,839,870,875,901,905,910,931,935,940,955,976,995,1014,1019,1025,1052,1057,1063,1084,1089,1104],{"__ignoreMap":195},[374,823,824,826,829,831,833],{"class":376,"line":377},[374,825,387],{"class":386},[374,827,828],{"class":390}," { defineHandler } ",[374,830,394],{"class":386},[374,832,573],{"class":397},[374,834,401],{"class":390},[374,836,837],{"class":376,"line":196},[374,838,408],{"emptyLinePlaceholder":407},[374,840,841,843,846,848,851,853,856,859,862,865,867],{"class":376,"line":404},[374,842,584],{"class":386},[374,844,845],{"class":427}," handler",[374,847,590],{"class":386},[374,849,850],{"class":414}," defineHandler",[374,852,446],{"class":390},[374,854,855],{"class":386},"async",[374,857,858],{"class":390}," (",[374,860,861],{"class":449},"event",[374,863,864],{"class":390},") ",[374,866,612],{"class":386},[374,868,869],{"class":390}," {\n",[374,871,872],{"class":376,"line":411},[374,873,874],{"class":380},"  // URL 解析\n",[374,876,877,880,883,886,889,892,895,898],{"class":376,"line":421},[374,878,879],{"class":386},"  const",[374,881,882],{"class":390}," { ",[374,884,885],{"class":427},"pathname",[374,887,888],{"class":390},", ",[374,890,891],{"class":427},"searchParams",[374,893,894],{"class":390}," } ",[374,896,897],{"class":386},"=",[374,899,900],{"class":390}," event.url;\n",[374,902,903],{"class":376,"line":434},[374,904,408],{"emptyLinePlaceholder":407},[374,906,907],{"class":376,"line":440},[374,908,909],{"class":380},"  // 访问请求头（编辑器中试试自动补全！）\n",[374,911,912,914,917,919,922,924,926,929],{"class":376,"line":456},[374,913,879],{"class":386},[374,915,916],{"class":427}," accept",[374,918,590],{"class":386},[374,920,921],{"class":390}," event.req.headers.",[374,923,601],{"class":414},[374,925,446],{"class":390},[374,927,928],{"class":397},"\"Accept\"",[374,930,479],{"class":390},[374,932,933],{"class":376,"line":462},[374,934,408],{"emptyLinePlaceholder":407},[374,936,937],{"class":376,"line":482},[374,938,939],{"class":380},"  // 读取请求体\n",[374,941,942,944,947,949,952],{"class":376,"line":488},[374,943,879],{"class":386},[374,945,946],{"class":427}," bodyStream",[374,948,590],{"class":386},[374,950,951],{"class":386}," await",[374,953,954],{"class":390}," event.req.body;\n",[374,956,958,960,963,965,967,970,973],{"class":376,"line":957},12,[374,959,879],{"class":386},[374,961,962],{"class":427}," bodyText",[374,964,590],{"class":386},[374,966,951],{"class":386},[374,968,969],{"class":390}," event.req.",[374,971,972],{"class":414},"text",[374,974,975],{"class":390},"();\n",[374,977,979,981,984,986,988,990,993],{"class":376,"line":978},13,[374,980,879],{"class":386},[374,982,983],{"class":427}," bodyJSON",[374,985,590],{"class":386},[374,987,951],{"class":386},[374,989,969],{"class":390},[374,991,992],{"class":414},"json",[374,994,975],{"class":390},[374,996,998,1000,1003,1005,1007,1009,1012],{"class":376,"line":997},14,[374,999,879],{"class":386},[374,1001,1002],{"class":427}," bodyFormData",[374,1004,590],{"class":386},[374,1006,951],{"class":386},[374,1008,969],{"class":390},[374,1010,1011],{"class":414},"formData",[374,1013,975],{"class":390},[374,1015,1017],{"class":376,"line":1016},15,[374,1018,408],{"emptyLinePlaceholder":407},[374,1020,1022],{"class":376,"line":1021},16,[374,1023,1024],{"class":380},"  // 访问运行时特定上下文\n",[374,1026,1028,1030,1032,1035,1037,1040,1042,1045,1047,1049],{"class":376,"line":1027},17,[374,1029,879],{"class":386},[374,1031,882],{"class":390},[374,1033,1034],{"class":427},"deno",[374,1036,888],{"class":390},[374,1038,1039],{"class":427},"bun",[374,1041,888],{"class":390},[374,1043,1044],{"class":427},"node",[374,1046,894],{"class":390},[374,1048,897],{"class":386},[374,1050,1051],{"class":390}," event.req.runtime;\n",[374,1053,1055],{"class":376,"line":1054},18,[374,1056,408],{"emptyLinePlaceholder":407},[374,1058,1060],{"class":376,"line":1059},19,[374,1061,1062],{"class":380},"  // 准备响应（h3 会智能处理）\n",[374,1064,1066,1069,1072,1074,1077,1079,1082],{"class":376,"line":1065},20,[374,1067,1068],{"class":390},"  event.res.headers.",[374,1070,1071],{"class":414},"set",[374,1073,446],{"class":390},[374,1075,1076],{"class":397},"\"Content-Type\"",[374,1078,888],{"class":390},[374,1080,1081],{"class":397},"\"application/json\"",[374,1083,479],{"class":390},[374,1085,1087],{"class":376,"line":1086},21,[374,1088,408],{"emptyLinePlaceholder":407},[374,1090,1092,1095,1098,1101],{"class":376,"line":1091},22,[374,1093,1094],{"class":386},"  return",[374,1096,1097],{"class":390}," { hello: ",[374,1099,1100],{"class":397},"\"web\"",[374,1102,1103],{"class":390}," };\n",[374,1105,1107],{"class":376,"line":1106},23,[374,1108,491],{"class":390},[191,1110,1111,1112,1117],{},"接下来调用处理器的 ",[215,1113,1114],{"href":750},[300,1115,1116],{},".fetch","：",[366,1119,1121],{"className":368,"code":1120,"language":370,"meta":195,"style":195},"const response = await handler.fetch(\"/\");\n\n// 🧙 类型化响应: { hello: string; }\nconst json = await response.json();\n",[300,1122,1123,1145,1149,1154],{"__ignoreMap":195},[374,1124,1125,1127,1130,1132,1134,1137,1139,1141,1143],{"class":376,"line":377},[374,1126,584],{"class":386},[374,1128,1129],{"class":427}," response",[374,1131,590],{"class":386},[374,1133,951],{"class":386},[374,1135,1136],{"class":390}," handler.",[374,1138,764],{"class":414},[374,1140,446],{"class":390},[374,1142,606],{"class":397},[374,1144,479],{"class":390},[374,1146,1147],{"class":376,"line":196},[374,1148,408],{"emptyLinePlaceholder":407},[374,1150,1151],{"class":376,"line":404},[374,1152,1153],{"class":380},"// 🧙 类型化响应: { hello: string; }\n",[374,1155,1156,1158,1161,1163,1165,1168,1170],{"class":376,"line":411},[374,1157,584],{"class":386},[374,1159,1160],{"class":427}," json",[374,1162,590],{"class":386},[374,1164,951],{"class":386},[374,1166,1167],{"class":390}," response.",[374,1169,992],{"class":414},[374,1171,975],{"class":390},[493,1173,1174],{},[191,1175,1176],{},"\n你可以直接将事件处理器作为独立、更轻量的 web 处理器使用，无需 H3 核心！",[292,1178,1180],{"id":1179},"中间件和插件","🧩 中间件和插件",[191,1182,1183,1184,1187,1188,1193],{},"H3 现在提供了符合人体工学的、可组合的中间件链式调用方式，基于 ",[300,1185,1186],{},"next()"," 函数（灵感来自 ",[215,1189,1192],{"href":1190,"rel":1191},"https://hono.dev/docs/guides/middleware",[229],"Hono middleware"," 💛）。",[191,1195,1196,1197,530],{},"同时，我们引入了一种简单而强大的模式，用于扩展 H3 应用，通过可复用的 ",[215,1198,538],{"href":77},[1200,1201,1202,1333,1429,1539,1646,1769],"CodeGroup",{},[366,1203,1206],{"className":368,"code":1204,"filename":1205,"language":370,"meta":195,"style":195},"import { H3 } from \"h3\";\n\nconst app = new H3().use(async (event, next) => {\n  // ... 响应前 ...\n  const body = await next();\n  // ... 响应后 ...\n  event.res.headers.append(\"x-middleware\", \"works\");\n  event.waitUntil(sendMetrics(event));\n  return body;\n});\n","middleware",[300,1207,1208,1221,1225,1261,1266,1282,1287,1306,1322,1329],{"__ignoreMap":195},[374,1209,1210,1212,1215,1217,1219],{"class":376,"line":377},[374,1211,387],{"class":386},[374,1213,1214],{"class":390}," { H3 } ",[374,1216,394],{"class":386},[374,1218,573],{"class":397},[374,1220,401],{"class":390},[374,1222,1223],{"class":376,"line":196},[374,1224,408],{"emptyLinePlaceholder":407},[374,1226,1227,1229,1231,1233,1235,1237,1239,1242,1244,1246,1248,1250,1252,1255,1257,1259],{"class":376,"line":404},[374,1228,584],{"class":386},[374,1230,587],{"class":427},[374,1232,590],{"class":386},[374,1234,468],{"class":386},[374,1236,595],{"class":414},[374,1238,598],{"class":390},[374,1240,1241],{"class":414},"use",[374,1243,446],{"class":390},[374,1245,855],{"class":386},[374,1247,858],{"class":390},[374,1249,861],{"class":449},[374,1251,888],{"class":390},[374,1253,1254],{"class":449},"next",[374,1256,864],{"class":390},[374,1258,612],{"class":386},[374,1260,869],{"class":390},[374,1262,1263],{"class":376,"line":411},[374,1264,1265],{"class":380},"  // ... 响应前 ...\n",[374,1267,1268,1270,1273,1275,1277,1280],{"class":376,"line":421},[374,1269,879],{"class":386},[374,1271,1272],{"class":427}," body",[374,1274,590],{"class":386},[374,1276,951],{"class":386},[374,1278,1279],{"class":414}," next",[374,1281,975],{"class":390},[374,1283,1284],{"class":376,"line":434},[374,1285,1286],{"class":380},"  // ... 响应后 ...\n",[374,1288,1289,1291,1294,1296,1299,1301,1304],{"class":376,"line":440},[374,1290,1068],{"class":390},[374,1292,1293],{"class":414},"append",[374,1295,446],{"class":390},[374,1297,1298],{"class":397},"\"x-middleware\"",[374,1300,888],{"class":390},[374,1302,1303],{"class":397},"\"works\"",[374,1305,479],{"class":390},[374,1307,1308,1311,1314,1316,1319],{"class":376,"line":456},[374,1309,1310],{"class":390},"  event.",[374,1312,1313],{"class":414},"waitUntil",[374,1315,446],{"class":390},[374,1317,1318],{"class":414},"sendMetrics",[374,1320,1321],{"class":390},"(event));\n",[374,1323,1324,1326],{"class":376,"line":462},[374,1325,1094],{"class":386},[374,1327,1328],{"class":390}," body;\n",[374,1330,1331],{"class":376,"line":482},[374,1332,491],{"class":390},[366,1334,1337],{"className":368,"code":1335,"filename":1336,"language":370,"meta":195,"style":195},"import { defineHandler, basicAuth } from \"h3\";\n\nexport default defineHandler({\n  middleware: [basicAuth({ password: \"test\" })],\n  handler: (event) => `Hello ${event.context.basicAuth?.username}!`,\n});\n","basic auth",[300,1338,1339,1352,1356,1368,1385,1425],{"__ignoreMap":195},[374,1340,1341,1343,1346,1348,1350],{"class":376,"line":377},[374,1342,387],{"class":386},[374,1344,1345],{"class":390}," { defineHandler, basicAuth } ",[374,1347,394],{"class":386},[374,1349,573],{"class":397},[374,1351,401],{"class":390},[374,1353,1354],{"class":376,"line":196},[374,1355,408],{"emptyLinePlaceholder":407},[374,1357,1358,1361,1364,1366],{"class":376,"line":404},[374,1359,1360],{"class":386},"export",[374,1362,1363],{"class":386}," default",[374,1365,850],{"class":414},[374,1367,418],{"class":390},[374,1369,1370,1373,1376,1379,1382],{"class":376,"line":411},[374,1371,1372],{"class":390},"  middleware: [",[374,1374,1375],{"class":414},"basicAuth",[374,1377,1378],{"class":390},"({ password: ",[374,1380,1381],{"class":397},"\"test\"",[374,1383,1384],{"class":390}," })],\n",[374,1386,1387,1390,1393,1395,1397,1399,1402,1404,1407,1410,1412,1414,1417,1420,1423],{"class":376,"line":421},[374,1388,1389],{"class":414},"  handler",[374,1391,1392],{"class":390},": (",[374,1394,861],{"class":449},[374,1396,864],{"class":390},[374,1398,612],{"class":386},[374,1400,1401],{"class":397}," `Hello ${",[374,1403,861],{"class":390},[374,1405,1406],{"class":397},".",[374,1408,1409],{"class":390},"context",[374,1411,1406],{"class":397},[374,1413,1375],{"class":390},[374,1415,1416],{"class":397},"?.",[374,1418,1419],{"class":390},"username",[374,1421,1422],{"class":397},"}!`",[374,1424,431],{"class":390},[374,1426,1427],{"class":376,"line":434},[374,1428,491],{"class":390},[366,1430,1433],{"className":368,"code":1431,"filename":1432,"language":370,"meta":195,"style":195},"import { H3, onRequest } from \"h3\";\n\nconst app = new H3().use(\n  onRequest((event) => {\n    console.log(`Request: [${event.req.method}] ${event.url.pathname}`);\n  }),\n);\n","onRequest",[300,1434,1435,1448,1452,1471,1487,1530,1535],{"__ignoreMap":195},[374,1436,1437,1439,1442,1444,1446],{"class":376,"line":377},[374,1438,387],{"class":386},[374,1440,1441],{"class":390}," { H3, onRequest } ",[374,1443,394],{"class":386},[374,1445,573],{"class":397},[374,1447,401],{"class":390},[374,1449,1450],{"class":376,"line":196},[374,1451,408],{"emptyLinePlaceholder":407},[374,1453,1454,1456,1458,1460,1462,1464,1466,1468],{"class":376,"line":404},[374,1455,584],{"class":386},[374,1457,587],{"class":427},[374,1459,590],{"class":386},[374,1461,468],{"class":386},[374,1463,595],{"class":414},[374,1465,598],{"class":390},[374,1467,1241],{"class":414},[374,1469,1470],{"class":390},"(\n",[374,1472,1473,1476,1479,1481,1483,1485],{"class":376,"line":411},[374,1474,1475],{"class":414},"  onRequest",[374,1477,1478],{"class":390},"((",[374,1480,861],{"class":449},[374,1482,864],{"class":390},[374,1484,612],{"class":386},[374,1486,869],{"class":390},[374,1488,1489,1492,1495,1497,1500,1502,1504,1506,1508,1511,1514,1516,1518,1521,1523,1525,1528],{"class":376,"line":421},[374,1490,1491],{"class":390},"    console.",[374,1493,1494],{"class":414},"log",[374,1496,446],{"class":390},[374,1498,1499],{"class":397},"`Request: [${",[374,1501,861],{"class":390},[374,1503,1406],{"class":397},[374,1505,450],{"class":390},[374,1507,1406],{"class":397},[374,1509,1510],{"class":390},"method",[374,1512,1513],{"class":397},"}] ${",[374,1515,861],{"class":390},[374,1517,1406],{"class":397},[374,1519,1520],{"class":390},"url",[374,1522,1406],{"class":397},[374,1524,885],{"class":390},[374,1526,1527],{"class":397},"}`",[374,1529,479],{"class":390},[374,1531,1532],{"class":376,"line":434},[374,1533,1534],{"class":390},"  }),\n",[374,1536,1537],{"class":376,"line":440},[374,1538,479],{"class":390},[366,1540,1543],{"className":368,"code":1541,"filename":1542,"language":370,"meta":195,"style":195},"import { H3, onResponse } from \"h3\";\n\nconst app = new H3().use(\n  onResponse((response, event) => {\n    console.log(`Response: [${event.req.method}] ${event.url.pathname}`, body);\n  }),\n);\n","onResponse",[300,1544,1545,1558,1562,1580,1600,1638,1642],{"__ignoreMap":195},[374,1546,1547,1549,1552,1554,1556],{"class":376,"line":377},[374,1548,387],{"class":386},[374,1550,1551],{"class":390}," { H3, onResponse } ",[374,1553,394],{"class":386},[374,1555,573],{"class":397},[374,1557,401],{"class":390},[374,1559,1560],{"class":376,"line":196},[374,1561,408],{"emptyLinePlaceholder":407},[374,1563,1564,1566,1568,1570,1572,1574,1576,1578],{"class":376,"line":404},[374,1565,584],{"class":386},[374,1567,587],{"class":427},[374,1569,590],{"class":386},[374,1571,468],{"class":386},[374,1573,595],{"class":414},[374,1575,598],{"class":390},[374,1577,1241],{"class":414},[374,1579,1470],{"class":390},[374,1581,1582,1585,1587,1590,1592,1594,1596,1598],{"class":376,"line":411},[374,1583,1584],{"class":414},"  onResponse",[374,1586,1478],{"class":390},[374,1588,1589],{"class":449},"response",[374,1591,888],{"class":390},[374,1593,861],{"class":449},[374,1595,864],{"class":390},[374,1597,612],{"class":386},[374,1599,869],{"class":390},[374,1601,1602,1604,1606,1608,1611,1613,1615,1617,1619,1621,1623,1625,1627,1629,1631,1633,1635],{"class":376,"line":421},[374,1603,1491],{"class":390},[374,1605,1494],{"class":414},[374,1607,446],{"class":390},[374,1609,1610],{"class":397},"`Response: [${",[374,1612,861],{"class":390},[374,1614,1406],{"class":397},[374,1616,450],{"class":390},[374,1618,1406],{"class":397},[374,1620,1510],{"class":390},[374,1622,1513],{"class":397},[374,1624,861],{"class":390},[374,1626,1406],{"class":397},[374,1628,1520],{"class":390},[374,1630,1406],{"class":397},[374,1632,885],{"class":390},[374,1634,1527],{"class":397},[374,1636,1637],{"class":390},", body);\n",[374,1639,1640],{"class":376,"line":434},[374,1641,1534],{"class":390},[374,1643,1644],{"class":376,"line":440},[374,1645,479],{"class":390},[366,1647,1650],{"className":368,"code":1648,"filename":1649,"language":370,"meta":195,"style":195},"import { H3, onError } from \"h3\";\n\nconst app = new H3().use(\n  onError((error, event) => {\n    console.error(\n      `[${event.req.method}] ${event.url.pathname} !! ${error.message}`,\n    );\n  }),\n);\n","onError",[300,1651,1652,1665,1669,1687,1707,1715,1756,1761,1765],{"__ignoreMap":195},[374,1653,1654,1656,1659,1661,1663],{"class":376,"line":377},[374,1655,387],{"class":386},[374,1657,1658],{"class":390}," { H3, onError } ",[374,1660,394],{"class":386},[374,1662,573],{"class":397},[374,1664,401],{"class":390},[374,1666,1667],{"class":376,"line":196},[374,1668,408],{"emptyLinePlaceholder":407},[374,1670,1671,1673,1675,1677,1679,1681,1683,1685],{"class":376,"line":404},[374,1672,584],{"class":386},[374,1674,587],{"class":427},[374,1676,590],{"class":386},[374,1678,468],{"class":386},[374,1680,595],{"class":414},[374,1682,598],{"class":390},[374,1684,1241],{"class":414},[374,1686,1470],{"class":390},[374,1688,1689,1692,1694,1697,1699,1701,1703,1705],{"class":376,"line":411},[374,1690,1691],{"class":414},"  onError",[374,1693,1478],{"class":390},[374,1695,1696],{"class":449},"error",[374,1698,888],{"class":390},[374,1700,861],{"class":449},[374,1702,864],{"class":390},[374,1704,612],{"class":386},[374,1706,869],{"class":390},[374,1708,1709,1711,1713],{"class":376,"line":421},[374,1710,1491],{"class":390},[374,1712,1696],{"class":414},[374,1714,1470],{"class":390},[374,1716,1717,1720,1722,1724,1726,1728,1730,1732,1734,1736,1738,1740,1742,1745,1747,1749,1752,1754],{"class":376,"line":434},[374,1718,1719],{"class":397},"      `[${",[374,1721,861],{"class":390},[374,1723,1406],{"class":397},[374,1725,450],{"class":390},[374,1727,1406],{"class":397},[374,1729,1510],{"class":390},[374,1731,1513],{"class":397},[374,1733,861],{"class":390},[374,1735,1406],{"class":397},[374,1737,1520],{"class":390},[374,1739,1406],{"class":397},[374,1741,885],{"class":390},[374,1743,1744],{"class":397},"} !! ${",[374,1746,1696],{"class":390},[374,1748,1406],{"class":397},[374,1750,1751],{"class":390},"message",[374,1753,1527],{"class":397},[374,1755,431],{"class":390},[374,1757,1758],{"class":376,"line":440},[374,1759,1760],{"class":390},"    );\n",[374,1762,1763],{"class":376,"line":456},[374,1764,1534],{"class":390},[374,1766,1767],{"class":376,"line":462},[374,1768,479],{"class":390},[366,1770,1773],{"className":368,"code":1771,"filename":1772,"language":370,"meta":195,"style":195},"import { H3, serve, definePlugin } from \"h3\";\n\nconst logger = definePlugin((h3, _options) => {\n  if (h3.config.debug) {\n    h3.use((req) => {\n      console.log(`[${req.method}] ${req.url}`);\n    });\n  }\n});\n\nconst app = new H3({ debug: true })\n  .register(logger())\n  .all(\"/**\", () => \"Hello!\");\n","plugins",[300,1774,1775,1788,1792,1820,1828,1845,1875,1880,1885,1889,1893,1914,1930],{"__ignoreMap":195},[374,1776,1777,1779,1782,1784,1786],{"class":376,"line":377},[374,1778,387],{"class":386},[374,1780,1781],{"class":390}," { H3, serve, definePlugin } ",[374,1783,394],{"class":386},[374,1785,573],{"class":397},[374,1787,401],{"class":390},[374,1789,1790],{"class":376,"line":196},[374,1791,408],{"emptyLinePlaceholder":407},[374,1793,1794,1796,1799,1801,1804,1806,1809,1811,1814,1816,1818],{"class":376,"line":404},[374,1795,584],{"class":386},[374,1797,1798],{"class":427}," logger",[374,1800,590],{"class":386},[374,1802,1803],{"class":414}," definePlugin",[374,1805,1478],{"class":390},[374,1807,1808],{"class":449},"h3",[374,1810,888],{"class":390},[374,1812,1813],{"class":449},"_options",[374,1815,864],{"class":390},[374,1817,612],{"class":386},[374,1819,869],{"class":390},[374,1821,1822,1825],{"class":376,"line":411},[374,1823,1824],{"class":386},"  if",[374,1826,1827],{"class":390}," (h3.config.debug) {\n",[374,1829,1830,1833,1835,1837,1839,1841,1843],{"class":376,"line":421},[374,1831,1832],{"class":390},"    h3.",[374,1834,1241],{"class":414},[374,1836,1478],{"class":390},[374,1838,450],{"class":449},[374,1840,864],{"class":390},[374,1842,612],{"class":386},[374,1844,869],{"class":390},[374,1846,1847,1850,1852,1854,1857,1859,1861,1863,1865,1867,1869,1871,1873],{"class":376,"line":434},[374,1848,1849],{"class":390},"      console.",[374,1851,1494],{"class":414},[374,1853,446],{"class":390},[374,1855,1856],{"class":397},"`[${",[374,1858,450],{"class":390},[374,1860,1406],{"class":397},[374,1862,1510],{"class":390},[374,1864,1513],{"class":397},[374,1866,450],{"class":390},[374,1868,1406],{"class":397},[374,1870,1520],{"class":390},[374,1872,1527],{"class":397},[374,1874,479],{"class":390},[374,1876,1877],{"class":376,"line":440},[374,1878,1879],{"class":390},"    });\n",[374,1881,1882],{"class":376,"line":456},[374,1883,1884],{"class":390},"  }\n",[374,1886,1887],{"class":376,"line":462},[374,1888,491],{"class":390},[374,1890,1891],{"class":376,"line":482},[374,1892,408],{"emptyLinePlaceholder":407},[374,1894,1895,1897,1899,1901,1903,1905,1908,1911],{"class":376,"line":488},[374,1896,584],{"class":386},[374,1898,587],{"class":427},[374,1900,590],{"class":386},[374,1902,468],{"class":386},[374,1904,595],{"class":414},[374,1906,1907],{"class":390},"({ debug: ",[374,1909,1910],{"class":427},"true",[374,1912,1913],{"class":390}," })\n",[374,1915,1916,1919,1922,1924,1927],{"class":376,"line":957},[374,1917,1918],{"class":390},"  .",[374,1920,1921],{"class":414},"register",[374,1923,446],{"class":390},[374,1925,1926],{"class":414},"logger",[374,1928,1929],{"class":390},"())\n",[374,1931,1932,1934,1937,1939,1942,1944,1946,1949],{"class":376,"line":978},[374,1933,1918],{"class":390},[374,1935,1936],{"class":414},"all",[374,1938,446],{"class":390},[374,1940,1941],{"class":397},"\"/**\"",[374,1943,609],{"class":390},[374,1945,612],{"class":386},[374,1947,1948],{"class":397}," \"Hello!\"",[374,1950,479],{"class":390},[767,1952,1953],{},[191,1954,1955,1956,1958],{},"\n接收 ",[300,1957,1254],{}," 回调是可选的。中间件也可以像 v1 那样编写，不返回响应。",[292,1960,1962],{"id":1961},"️-从-版本-1-迁移","⬆️ 从 版本 1 迁移",[191,1964,1965],{},"我们尽力减少了破坏性变更。大部分工具仍保持向后兼容。",[209,1967,1968],{"to":163},[191,1969,1970,1971,530],{},"查看",[215,1972,1973],{"href":163},"迁移指南",[292,1975,1977],{"id":1976},"面向所有人的统一-http-服务器工具","🙌 面向所有人的统一 H(TTP) 服务器工具",[191,1979,1980,1981,1986,1987,1992,1993,1998,1999,2003],{},"H3 及相关项目已迁移至专门的 ",[215,1982,1985],{"href":1983,"rel":1984},"https://github.com/h3js",[229],"github 组织"," 和新的 ",[215,1988,1991],{"href":1989,"rel":1990},"https://h3.dev",[229],"h3.dev"," 域名（感谢 ",[215,1994,1997],{"href":1995,"rel":1996},"https://syntax.fm/",[229],"syntax.fm"," 和其他",[215,2000,2002],{"href":2001},"/#sponsors","赞助商","💛的捐赠）。",[191,2005,2006],{},"在 H3 旗帜下，我们维护了若干用于通用 JavaScript 服务器的关键组件。",[191,2008,2009,2010,530],{},"全部开源，",[218,2011,2012],{},"既可与 H3 一起使用，也可独立于 H3，且支持任意 JavaScript 运行时",[273,2014,2015,2023,2031,2037],{},[276,2016,2017,2022],{},[215,2018,2021],{"href":2019,"rel":2020},"https://github.com/h3js/h3",[229],"⚡️ h3","：极简 HTTP 框架。",[276,2024,2025,2030],{},[215,2026,2029],{"href":2027,"rel":2028},"https://github.com/h3js/rou3",[229],"🌳 rou3","：轻量级 JavaScript 路由器。",[276,2032,2033,2036],{},[215,2034,357],{"href":355,"rel":2035},[229],"：通用 web 服务器 API。",[276,2038,2039,2044],{},[215,2040,2043],{"href":2041,"rel":2042},"https://crossws.h3.dev",[229],"🔌 crossws","：跨平台 WebSocket 支持。",[292,2046,2048],{"id":2047},"️-特别感谢","❤️ 特别感谢",[191,2050,2051,2052,2057,2058,2063,2064,530],{},"这次发布离不开优秀的",[215,2053,2056],{"href":2054,"rel":2055},"https://github.com/h3js/h3/graphs/contributors",[229],"贡献者","、社区的反馈（",[215,2059,2062],{"href":2060,"rel":2061},"https://discord.h3.dev",[229],"Discord","）、受 Hono、Elysia 等 web 标准框架的启发，以及使得开源工作成为可能的",[215,2065,2002],{"href":2001},[292,2067,2069],{"id":2068},"️-v2稳定版路线图","🗺️ v2（稳定版）路线图",[191,2071,2072],{},[218,2073,2074],{},"接下来：",[273,2076,2077,2080,2083],{},[276,2078,2079],{},"收集社区反馈。",[276,2081,2082],{},"基于反馈完成 API 更新。",[276,2084,2085,2086,2089],{},"确保生态兼容，并升级支持 ",[215,2087,236],{"href":234,"rel":2088},[229]," v3。",[2091,2092,2093],"callout",{"to":2060},[191,2094,2095,2096,2099],{},"加入我们的 ",[215,2097,2062],{"href":2060,"rel":2098},[229],"，分享你的体验和反馈！",[209,2101,2102],{"to":6},[191,2103,213,2104,221],{},[215,2105,2106],{"href":6},[218,2107,220],{},[2109,2110,2111],"style",{},"html pre.shiki code .sCsY4, html code.shiki .sCsY4{--shiki-light:#6A737D;--shiki-default:#6A737D;--shiki-dark:#6A737D}html pre.shiki code .so5gQ, html code.shiki .so5gQ{--shiki-light:#D73A49;--shiki-default:#F97583;--shiki-dark:#F97583}html pre.shiki code .slsVL, html code.shiki .slsVL{--shiki-light:#24292E;--shiki-default:#E1E4E8;--shiki-dark:#E1E4E8}html pre.shiki code .sfrk1, html code.shiki .sfrk1{--shiki-light:#032F62;--shiki-default:#9ECBFF;--shiki-dark:#9ECBFF}html pre.shiki code .shcOC, html code.shiki .shcOC{--shiki-light:#6F42C1;--shiki-default:#B392F0;--shiki-dark:#B392F0}html pre.shiki code .suiK_, html code.shiki .suiK_{--shiki-light:#005CC5;--shiki-default:#79B8FF;--shiki-dark:#79B8FF}html pre.shiki code .sQHwn, html code.shiki .sQHwn{--shiki-light:#E36209;--shiki-default:#FFAB70;--shiki-dark:#FFAB70}html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":195,"searchDepth":196,"depth":196,"links":2113},[2114,2115,2116,2117,2118,2119,2120,2121,2122],{"id":294,"depth":196,"text":295},{"id":504,"depth":196,"text":505},{"id":636,"depth":196,"text":637},{"id":784,"depth":196,"text":785},{"id":1179,"depth":196,"text":1180},{"id":1961,"depth":196,"text":1962},{"id":1976,"depth":196,"text":1977},{"id":2047,"depth":196,"text":2048},{"id":2068,"depth":196,"text":2069},"⚡ H3 v2 测试版已发布 —— 完全基于 web 标准重写，向后兼容，速度比以往更快！",{"date":2125,"category":2126,"authors":2127,"icon":176},"2025-06-10","release",[2128],{"name":2129,"github":2130},"Pooya Parsa","pi0",{"icon":176},{"title":182,"description":2123},"kBnmQnSMt6sSZy-nTGuZrhQvaIyqkEEa6VrneTJMcik",{"id":2135,"title":178,"body":2136,"description":3342,"extension":198,"meta":3343,"navigation":3347,"path":179,"seo":3348,"stem":180,"__hash__":3349},"content/99.blog/1.v1.8.md",{"type":188,"value":2137,"toc":3332,"icon":176},[2138,2153,2171,2183,2186,2207,2211,2227,2249,2258,2366,2373,2387,2390,2419,2423,2444,2455,2655,2665,2668,2671,2828,2831,2834,2848,2958,2962,2978,3168,3171,3174,3217,3221,3230,3237,3297,3304,3311,3318,3321,3329],[2139,2140,2141],"blockquote",{},[191,2142,2143,2144,526,2148,530],{},"H3 是一个用 TypeScript 编写的多功能 H(TTP) 框架，现已驱动 ",[215,2145,236],{"href":2146,"rel":2147},"https://nitro.zhcndoc.com",[229],[215,2149,2152],{"href":2150,"rel":2151},"https://nuxt.zhcndoc.com",[229],"Nuxt",[191,2154,2155,2160,2161,2165,2166,2170],{},[215,2156,2159],{"href":2157,"rel":2158},"https://github.com/unjs/h3/tree/cbc8909b2003d6d5df694ab7a36aa067cc990c74",[229],"近两年前","，我们怀着成为 ",[215,2162,2164],{"href":2150,"rel":2163},[229],"Nuxt 3"," 中最小型 HTTP 框架的目标创建了 H3，确保其与 ",[215,2167,270],{"href":2168,"rel":2169},"https://node.zhcndoc.com",[229]," 兼容并提供优雅的开发体验。同时，它还旨在具备面向未来的设计，能够适配 Edge 和 Web Worker 运行时，这在当时是相对较新的概念。",[191,2172,2173,2174,2178,2179,2182],{},"同期，我们还开发了 ",[215,2175,230],{"href":2176,"rel":2177},"https://github.com/unjs/unenv/tree/main",[229],"，这是一个轻量层，允许在无需 Node.js 的情况下，在 Edge 兼容运行时上使用 Node.js 库和 HTTP 中间件。这项创新在让我们能利用 NPM 和 Node.js 生态的力量，而无需从零开始实现 web 兼容方面起到了关键作用。H3 和 unenv 的协同组合最终让 ",[215,2180,236],{"href":2146,"rel":2181},[229]," 成为首批完全兼容 Edge 运行时的网络框架之一。",[191,2184,2185],{},"此次最新发布让 H3 更进一步，能够开箱即用地提供原生 Web API 兼容性。",[2139,2187,2188],{},[191,2189,2190,2191,526,2195,2199,2200,526,2203,2206],{},"🚀 本版本已立即适用于所有生态包，包括 ",[215,2192,236],{"href":2193,"rel":2194},"https://nitro.zhcndoc.com/",[229],[215,2196,2164],{"href":2197,"rel":2198},"https://nuxt.zhcndoc.com/",[229],"。请记得刷新你的 ",[300,2201,2202],{},"lockfile",[300,2204,2205],{},"node_modules"," 以获取更新。",[292,2208,2210],{"id":2209},"web-和-plain-适配器","Web 和 Plain 适配器",[191,2212,2213,2214,2218,2219,2222,2223,2226],{},"我们引入了一个新的内置适配器，具有 ",[215,2215,764],{"href":2216,"rel":2217},"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API",[229]," 兼容的签名，以 ",[215,2220,310],{"href":791,"rel":2221},[229]," 作为输入，以 ",[215,2224,318],{"href":795,"rel":2225},[229]," 作为返回值。",[191,2228,2229,2230,259,2235,259,2240,526,2243,2248],{},"这意味着你现在可以无缝地将 H3 应用部署到诸如 ",[215,2231,2234],{"href":2232,"rel":2233},"https://workers.cloudflare.com/",[229],"Cloudflare Workers",[215,2236,2239],{"href":2237,"rel":2238},"https://deno.zhcndoc.com/deploy",[229],"Deno Deploy",[215,2241,264],{"href":262,"rel":2242},[229],[215,2244,2247],{"href":2245,"rel":2246},"https://lagon.app/",[229],"Lagon"," 等运行时上。",[191,2250,2251,2252,2257],{},"关于实际示例和演示，请查看 ",[215,2253,2256],{"href":2254,"rel":2255},"https://github.com/pi0/h3-on-edge",[229],"h3-on-edge"," 仓库。",[366,2259,2263],{"className":2260,"code":2261,"language":2262,"meta":195,"style":195},"language-ts shiki shiki-themes github-light github-dark github-dark","// import { createApp, eventHandler, toWebHandler } from 'h3'\nimport { createApp, eventHandler, toWebHandler } from \"https://esm.sh/h3@1.8.0\";\n\nconst app = createApp();\n\napp.use(\n  \"/\",\n  eventHandler((event) => \"H3 works on edge!\"),\n);\n\nconst webHandler = toWebHandler(app); // (Request) => Promise\u003CResponse>\n","ts",[300,2264,2265,2270,2284,2288,2301,2305,2314,2321,2340,2344,2348],{"__ignoreMap":195},[374,2266,2267],{"class":376,"line":377},[374,2268,2269],{"class":380},"// import { createApp, eventHandler, toWebHandler } from 'h3'\n",[374,2271,2272,2274,2277,2279,2282],{"class":376,"line":196},[374,2273,387],{"class":386},[374,2275,2276],{"class":390}," { createApp, eventHandler, toWebHandler } ",[374,2278,394],{"class":386},[374,2280,2281],{"class":397}," \"https://esm.sh/h3@1.8.0\"",[374,2283,401],{"class":390},[374,2285,2286],{"class":376,"line":404},[374,2287,408],{"emptyLinePlaceholder":407},[374,2289,2290,2292,2294,2296,2299],{"class":376,"line":411},[374,2291,584],{"class":386},[374,2293,587],{"class":427},[374,2295,590],{"class":386},[374,2297,2298],{"class":414}," createApp",[374,2300,975],{"class":390},[374,2302,2303],{"class":376,"line":421},[374,2304,408],{"emptyLinePlaceholder":407},[374,2306,2307,2310,2312],{"class":376,"line":434},[374,2308,2309],{"class":390},"app.",[374,2311,1241],{"class":414},[374,2313,1470],{"class":390},[374,2315,2316,2319],{"class":376,"line":440},[374,2317,2318],{"class":397},"  \"/\"",[374,2320,431],{"class":390},[374,2322,2323,2326,2328,2330,2332,2334,2337],{"class":376,"line":456},[374,2324,2325],{"class":414},"  eventHandler",[374,2327,1478],{"class":390},[374,2329,861],{"class":449},[374,2331,864],{"class":390},[374,2333,612],{"class":386},[374,2335,2336],{"class":397}," \"H3 works on edge!\"",[374,2338,2339],{"class":390},"),\n",[374,2341,2342],{"class":376,"line":462},[374,2343,479],{"class":390},[374,2345,2346],{"class":376,"line":482},[374,2347,408],{"emptyLinePlaceholder":407},[374,2349,2350,2352,2355,2357,2360,2363],{"class":376,"line":488},[374,2351,584],{"class":386},[374,2353,2354],{"class":427}," webHandler",[374,2356,590],{"class":386},[374,2358,2359],{"class":414}," toWebHandler",[374,2361,2362],{"class":390},"(app); ",[374,2364,2365],{"class":380},"// (Request) => Promise\u003CResponse>\n",[191,2367,2368,2369,2372],{},"除了 web 处理器之外，我们还引入了一种新的 plain 适配器格式，使用 ",[300,2370,2371],{},"toPlainHandler(app)"," 语法。这有助于让 H3 无缝集成任何使用纯输入和响应对象的无服务器平台。",[191,2374,2375,2376,2380,2381,2386],{},"所有这些都得益于新流功能的实现以及 ",[215,2377,230],{"href":2378,"rel":2379},"https://unenv.unjs.io",[229]," 提供的轻量级 Node.js 兼容层。此前，这种集成级别只能通过 ",[215,2382,2385],{"href":2383,"rel":2384},"https://nitro.zhcndoc.com/deploy",[229],"Nitro presets"," 实现。",[191,2388,2389],{},"此外，我们还引入了一组新的 web 辅助工具：",[273,2391,2392,2401,2407,2413],{},[276,2393,2394,2397,2398,530],{},[300,2395,2396],{},"toWebRequest(event)","：将 H3 事件对象转换成 web ",[215,2399,310],{"href":791,"rel":2400},[229],[276,2402,2403,2406],{},[300,2404,2405],{},"getRequestWebStream(event)","：从当前 H3 事件请求中获取可读流。",[276,2408,2409,2412],{},[300,2410,2411],{},"fromPlainHandler(plainHandler)","：将纯对象处理器转换为兼容 H3 的事件处理器。",[276,2414,2415,2418],{},[300,2416,2417],{},"fromWebHandler(webHandler)","：将 Web Request/Response 处理器转换为兼容 H3 的事件处理器。",[292,2420,2422],{"id":2421},"web-流支持","Web 流支持",[191,2424,2425,2426,2431,2432,2437,2438,2443],{},"H3 现支持原生 ",[215,2427,2430],{"href":2428,"rel":2429},"https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream",[229],"Readable Stream"," 响应支持。这自然带来了与诸如依赖流响应的库（如 ",[215,2433,2436],{"href":2434,"rel":2435},"https://github.com/vercel/ai",[229],"Vercel/AI","） (",[215,2439,2442],{"href":2440,"rel":2441},"https://github.com/Hebilicious/nuxt-openai-vercel-edge-demo",[229],"演示",") 的兼容性。",[191,2445,2446,2447,2450,2451,2454],{},"利用此功能非常简单 —— 只需从你的事件处理程序返回一个 ",[215,2448,2430],{"href":2428,"rel":2449},[229]," 或 ",[215,2452,318],{"href":795,"rel":2453},[229]," 对象即可。",[366,2456,2458],{"className":2260,"code":2457,"language":2262,"meta":195,"style":195},"export default defineHandler((event) => {\n  setResponseHeader(event, \"Content-Type\", \"text/html\");\n  const encoder = new TextEncoder();\n  const stream = new ReadableStream({\n    async start(controller) {\n      for (const token of \"Streaming is so cool with H3!\".split(\" \")) {\n        controller.enqueue(encoder.encode(token));\n        await new Promise((resolve) => {\n          setTimeout(resolve, 300);\n        });\n      }\n    },\n  });\n  return stream;\n});\n",[300,2459,2460,2478,2495,2511,2527,2542,2573,2590,2611,2624,2629,2634,2639,2644,2651],{"__ignoreMap":195},[374,2461,2462,2464,2466,2468,2470,2472,2474,2476],{"class":376,"line":377},[374,2463,1360],{"class":386},[374,2465,1363],{"class":386},[374,2467,850],{"class":414},[374,2469,1478],{"class":390},[374,2471,861],{"class":449},[374,2473,864],{"class":390},[374,2475,612],{"class":386},[374,2477,869],{"class":390},[374,2479,2480,2483,2486,2488,2490,2493],{"class":376,"line":196},[374,2481,2482],{"class":414},"  setResponseHeader",[374,2484,2485],{"class":390},"(event, ",[374,2487,1076],{"class":397},[374,2489,888],{"class":390},[374,2491,2492],{"class":397},"\"text/html\"",[374,2494,479],{"class":390},[374,2496,2497,2499,2502,2504,2506,2509],{"class":376,"line":404},[374,2498,879],{"class":386},[374,2500,2501],{"class":427}," encoder",[374,2503,590],{"class":386},[374,2505,468],{"class":386},[374,2507,2508],{"class":414}," TextEncoder",[374,2510,975],{"class":390},[374,2512,2513,2515,2518,2520,2522,2525],{"class":376,"line":411},[374,2514,879],{"class":386},[374,2516,2517],{"class":427}," stream",[374,2519,590],{"class":386},[374,2521,468],{"class":386},[374,2523,2524],{"class":414}," ReadableStream",[374,2526,418],{"class":390},[374,2528,2529,2532,2535,2537,2540],{"class":376,"line":421},[374,2530,2531],{"class":386},"    async",[374,2533,2534],{"class":414}," start",[374,2536,446],{"class":390},[374,2538,2539],{"class":449},"controller",[374,2541,453],{"class":390},[374,2543,2544,2547,2549,2551,2554,2557,2560,2562,2565,2567,2570],{"class":376,"line":434},[374,2545,2546],{"class":386},"      for",[374,2548,858],{"class":390},[374,2550,584],{"class":386},[374,2552,2553],{"class":427}," token",[374,2555,2556],{"class":386}," of",[374,2558,2559],{"class":397}," \"Streaming is so cool with H3!\"",[374,2561,1406],{"class":390},[374,2563,2564],{"class":414},"split",[374,2566,446],{"class":390},[374,2568,2569],{"class":397},"\" \"",[374,2571,2572],{"class":390},")) {\n",[374,2574,2575,2578,2581,2584,2587],{"class":376,"line":440},[374,2576,2577],{"class":390},"        controller.",[374,2579,2580],{"class":414},"enqueue",[374,2582,2583],{"class":390},"(encoder.",[374,2585,2586],{"class":414},"encode",[374,2588,2589],{"class":390},"(token));\n",[374,2591,2592,2595,2597,2600,2602,2605,2607,2609],{"class":376,"line":456},[374,2593,2594],{"class":386},"        await",[374,2596,468],{"class":386},[374,2598,2599],{"class":427}," Promise",[374,2601,1478],{"class":390},[374,2603,2604],{"class":449},"resolve",[374,2606,864],{"class":390},[374,2608,612],{"class":386},[374,2610,869],{"class":390},[374,2612,2613,2616,2619,2622],{"class":376,"line":462},[374,2614,2615],{"class":414},"          setTimeout",[374,2617,2618],{"class":390},"(resolve, ",[374,2620,2621],{"class":427},"300",[374,2623,479],{"class":390},[374,2625,2626],{"class":376,"line":482},[374,2627,2628],{"class":390},"        });\n",[374,2630,2631],{"class":376,"line":488},[374,2632,2633],{"class":390},"      }\n",[374,2635,2636],{"class":376,"line":957},[374,2637,2638],{"class":390},"    },\n",[374,2640,2641],{"class":376,"line":978},[374,2642,2643],{"class":390},"  });\n",[374,2645,2646,2648],{"class":376,"line":997},[374,2647,1094],{"class":386},[374,2649,2650],{"class":390}," stream;\n",[374,2652,2653],{"class":376,"line":1016},[374,2654,491],{"class":390},[191,2656,2657,2658,526,2661,2664],{},"对于更高级的场景，你可能会选择使用 ",[300,2659,2660],{},"sendStream(event, stream)",[300,2662,2663],{},"sendWebResponse(event, stream)"," 工具，而不是直接返回流。",[292,2666,2667],{"id":2667},"对象语法事件处理器",[191,2669,2670],{},"H3 现在支持通过对象语法定义事件处理器。采用该方法，你可以定义在每个处理程序执行前后运行的钩子，例如身份验证或压缩中间件。",[366,2672,2674],{"className":2260,"code":2673,"language":2262,"meta":195,"style":195},"const auth = defineRequestMiddleware((event) => {\n  event.context.auth = { name: \"admin\" };\n});\n\nconst compression = defineResponseMiddleware((event) => {\n  // 示例：https://stackblitz.com/edit/github-mb6bz3\n});\n\nexport default eventHandler({\n  onRequest: [auth],\n  onResponse: [compression],\n  async handler(event) {\n    return `Hello ${event.context.auth?.name || \"Guest\"}`;\n  },\n});\n",[300,2675,2676,2698,2713,2717,2721,2743,2748,2752,2756,2767,2772,2777,2790,2820,2824],{"__ignoreMap":195},[374,2677,2678,2680,2683,2685,2688,2690,2692,2694,2696],{"class":376,"line":377},[374,2679,584],{"class":386},[374,2681,2682],{"class":427}," auth",[374,2684,590],{"class":386},[374,2686,2687],{"class":414}," defineRequestMiddleware",[374,2689,1478],{"class":390},[374,2691,861],{"class":449},[374,2693,864],{"class":390},[374,2695,612],{"class":386},[374,2697,869],{"class":390},[374,2699,2700,2703,2705,2708,2711],{"class":376,"line":196},[374,2701,2702],{"class":390},"  event.context.auth ",[374,2704,897],{"class":386},[374,2706,2707],{"class":390}," { name: ",[374,2709,2710],{"class":397},"\"admin\"",[374,2712,1103],{"class":390},[374,2714,2715],{"class":376,"line":404},[374,2716,491],{"class":390},[374,2718,2719],{"class":376,"line":411},[374,2720,408],{"emptyLinePlaceholder":407},[374,2722,2723,2725,2728,2730,2733,2735,2737,2739,2741],{"class":376,"line":421},[374,2724,584],{"class":386},[374,2726,2727],{"class":427}," compression",[374,2729,590],{"class":386},[374,2731,2732],{"class":414}," defineResponseMiddleware",[374,2734,1478],{"class":390},[374,2736,861],{"class":449},[374,2738,864],{"class":390},[374,2740,612],{"class":386},[374,2742,869],{"class":390},[374,2744,2745],{"class":376,"line":434},[374,2746,2747],{"class":380},"  // 示例：https://stackblitz.com/edit/github-mb6bz3\n",[374,2749,2750],{"class":376,"line":440},[374,2751,491],{"class":390},[374,2753,2754],{"class":376,"line":456},[374,2755,408],{"emptyLinePlaceholder":407},[374,2757,2758,2760,2762,2765],{"class":376,"line":462},[374,2759,1360],{"class":386},[374,2761,1363],{"class":386},[374,2763,2764],{"class":414}," eventHandler",[374,2766,418],{"class":390},[374,2768,2769],{"class":376,"line":482},[374,2770,2771],{"class":390},"  onRequest: [auth],\n",[374,2773,2774],{"class":376,"line":488},[374,2775,2776],{"class":390},"  onResponse: [compression],\n",[374,2778,2779,2782,2784,2786,2788],{"class":376,"line":957},[374,2780,2781],{"class":386},"  async",[374,2783,845],{"class":414},[374,2785,446],{"class":390},[374,2787,861],{"class":449},[374,2789,453],{"class":390},[374,2791,2792,2794,2796,2798,2800,2802,2804,2807,2809,2812,2815,2818],{"class":376,"line":978},[374,2793,465],{"class":386},[374,2795,1401],{"class":397},[374,2797,861],{"class":390},[374,2799,1406],{"class":397},[374,2801,1409],{"class":390},[374,2803,1406],{"class":397},[374,2805,2806],{"class":390},"auth",[374,2808,1416],{"class":397},[374,2810,2811],{"class":390},"name",[374,2813,2814],{"class":386}," ||",[374,2816,2817],{"class":397}," \"Guest\"}`",[374,2819,401],{"class":390},[374,2821,2822],{"class":376,"line":997},[374,2823,485],{"class":390},[374,2825,2826],{"class":376,"line":1016},[374,2827,491],{"class":390},[292,2829,2830],{"id":2830},"类型化事件处理请求",[191,2832,2833],{},"H3 现支持使用新的泛型类型支持定义事件类型。",[191,2835,2836,2837,526,2840,2843,2844,2847],{},"定义类型后，请求工具将能感知事件输入类型。这一增强还允许我们提升上游框架（如 ",[215,2838,236],{"href":2193,"rel":2839},[229],[215,2841,2152],{"href":2197,"rel":2842},[229],"）中 ",[300,2845,2846],{},"$fetch"," 处理器的类型安全。",[366,2849,2851],{"className":2260,"code":2850,"language":2262,"meta":195,"style":195},"export default eventHandler\u003C{ body: { name: string }; query: { id: string } }>(\n  async (event) => {\n    const query = getQuery(event); // query 被类型定义为 { id: string }\n    const body = await readBody(event); // body 被类型定义为 { name: string }\n  },\n);\n",[300,2852,2853,2899,2913,2932,2950,2954],{"__ignoreMap":195},[374,2854,2855,2857,2859,2861,2864,2867,2870,2872,2874,2876,2879,2882,2885,2887,2889,2892,2894,2896],{"class":376,"line":377},[374,2856,1360],{"class":386},[374,2858,1363],{"class":386},[374,2860,2764],{"class":414},[374,2862,2863],{"class":390},"\u003C{ ",[374,2865,2866],{"class":449},"body",[374,2868,2869],{"class":386},":",[374,2871,882],{"class":390},[374,2873,2811],{"class":449},[374,2875,2869],{"class":386},[374,2877,2878],{"class":427}," string",[374,2880,2881],{"class":390}," }; ",[374,2883,2884],{"class":449},"query",[374,2886,2869],{"class":386},[374,2888,882],{"class":390},[374,2890,2891],{"class":449},"id",[374,2893,2869],{"class":386},[374,2895,2878],{"class":427},[374,2897,2898],{"class":390}," } }>(\n",[374,2900,2901,2903,2905,2907,2909,2911],{"class":376,"line":196},[374,2902,2781],{"class":386},[374,2904,858],{"class":390},[374,2906,861],{"class":449},[374,2908,864],{"class":390},[374,2910,612],{"class":386},[374,2912,869],{"class":390},[374,2914,2915,2918,2921,2923,2926,2929],{"class":376,"line":404},[374,2916,2917],{"class":386},"    const",[374,2919,2920],{"class":427}," query",[374,2922,590],{"class":386},[374,2924,2925],{"class":414}," getQuery",[374,2927,2928],{"class":390},"(event); ",[374,2930,2931],{"class":380},"// query 被类型定义为 { id: string }\n",[374,2933,2934,2936,2938,2940,2942,2945,2947],{"class":376,"line":411},[374,2935,2917],{"class":386},[374,2937,1272],{"class":427},[374,2939,590],{"class":386},[374,2941,951],{"class":386},[374,2943,2944],{"class":414}," readBody",[374,2946,2928],{"class":390},[374,2948,2949],{"class":380},"// body 被类型定义为 { name: string }\n",[374,2951,2952],{"class":376,"line":421},[374,2953,485],{"class":390},[374,2955,2956],{"class":376,"line":434},[374,2957,479],{"class":390},[292,2959,2961],{"id":2960},"运行时-类型安全请求工具","运行时 + 类型安全请求工具",[191,2963,2964,2965,526,2968,2971,2972,2977],{},"新增两个实用函数 ",[300,2966,2967],{},"getValidatedQuery(event, validator)",[300,2969,2970],{},"readValidatedBody(event, validator)","，便于结合如 ",[215,2973,2976],{"href":2974,"rel":2975},"https://zod.dev/",[229],"zod"," 这类模式验证器，实现运行时和类型安全。",[366,2979,2981],{"className":2260,"code":2980,"language":2262,"meta":195,"style":195},"import { z } from \"zod\";\n\nconst userSchema = z.object({\n  name: z.string().default(\"Guest\"),\n  email: z.string().email(),\n});\n\nexport default defineHandler(async (event) => {\n  const result = await readValidatedBody(event, (body) =>\n    userSchema.safeParse(body),\n  ); // 或使用 `.parse` 直接抛出错误\n\n  if (!result.success) throw result.error.issues;\n\n  // User 对象经过验证且有类型支持！\n  return result.data;\n});\n",[300,2982,2983,2997,3001,3018,3038,3053,3057,3061,3083,3107,3118,3126,3130,3148,3152,3157,3164],{"__ignoreMap":195},[374,2984,2985,2987,2990,2992,2995],{"class":376,"line":377},[374,2986,387],{"class":386},[374,2988,2989],{"class":390}," { z } ",[374,2991,394],{"class":386},[374,2993,2994],{"class":397}," \"zod\"",[374,2996,401],{"class":390},[374,2998,2999],{"class":376,"line":196},[374,3000,408],{"emptyLinePlaceholder":407},[374,3002,3003,3005,3008,3010,3013,3016],{"class":376,"line":404},[374,3004,584],{"class":386},[374,3006,3007],{"class":427}," userSchema",[374,3009,590],{"class":386},[374,3011,3012],{"class":390}," z.",[374,3014,3015],{"class":414},"object",[374,3017,418],{"class":390},[374,3019,3020,3023,3026,3028,3031,3033,3036],{"class":376,"line":411},[374,3021,3022],{"class":390},"  name: z.",[374,3024,3025],{"class":414},"string",[374,3027,598],{"class":390},[374,3029,3030],{"class":414},"default",[374,3032,446],{"class":390},[374,3034,3035],{"class":397},"\"Guest\"",[374,3037,2339],{"class":390},[374,3039,3040,3043,3045,3047,3050],{"class":376,"line":421},[374,3041,3042],{"class":390},"  email: z.",[374,3044,3025],{"class":414},[374,3046,598],{"class":390},[374,3048,3049],{"class":414},"email",[374,3051,3052],{"class":390},"(),\n",[374,3054,3055],{"class":376,"line":434},[374,3056,491],{"class":390},[374,3058,3059],{"class":376,"line":440},[374,3060,408],{"emptyLinePlaceholder":407},[374,3062,3063,3065,3067,3069,3071,3073,3075,3077,3079,3081],{"class":376,"line":456},[374,3064,1360],{"class":386},[374,3066,1363],{"class":386},[374,3068,850],{"class":414},[374,3070,446],{"class":390},[374,3072,855],{"class":386},[374,3074,858],{"class":390},[374,3076,861],{"class":449},[374,3078,864],{"class":390},[374,3080,612],{"class":386},[374,3082,869],{"class":390},[374,3084,3085,3087,3090,3092,3094,3097,3100,3102,3104],{"class":376,"line":462},[374,3086,879],{"class":386},[374,3088,3089],{"class":427}," result",[374,3091,590],{"class":386},[374,3093,951],{"class":386},[374,3095,3096],{"class":414}," readValidatedBody",[374,3098,3099],{"class":390},"(event, (",[374,3101,2866],{"class":449},[374,3103,864],{"class":390},[374,3105,3106],{"class":386},"=>\n",[374,3108,3109,3112,3115],{"class":376,"line":482},[374,3110,3111],{"class":390},"    userSchema.",[374,3113,3114],{"class":414},"safeParse",[374,3116,3117],{"class":390},"(body),\n",[374,3119,3120,3123],{"class":376,"line":488},[374,3121,3122],{"class":390},"  ); ",[374,3124,3125],{"class":380},"// 或使用 `.parse` 直接抛出错误\n",[374,3127,3128],{"class":376,"line":957},[374,3129,408],{"emptyLinePlaceholder":407},[374,3131,3132,3134,3136,3139,3142,3145],{"class":376,"line":978},[374,3133,1824],{"class":386},[374,3135,858],{"class":390},[374,3137,3138],{"class":386},"!",[374,3140,3141],{"class":390},"result.success) ",[374,3143,3144],{"class":386},"throw",[374,3146,3147],{"class":390}," result.error.issues;\n",[374,3149,3150],{"class":376,"line":997},[374,3151,408],{"emptyLinePlaceholder":407},[374,3153,3154],{"class":376,"line":1016},[374,3155,3156],{"class":380},"  // User 对象经过验证且有类型支持！\n",[374,3158,3159,3161],{"class":376,"line":1021},[374,3160,1094],{"class":386},[374,3162,3163],{"class":390}," result.data;\n",[374,3165,3166],{"class":376,"line":1027},[374,3167,491],{"class":390},[292,3169,3170],{"id":3170},"其他实用工具",[191,3172,3173],{},"我们还引入了多种其他工具，进一步提升 Web 应用开发体验：",[273,3175,3176,3182,3193,3199,3205],{},[276,3177,3178,3181],{},[300,3179,3180],{},"getRequestIP(event, { xForwardedFor? })","：获取传入请求的 IP。",[276,3183,3184,3187,3188,530],{},[300,3185,3186],{},"readFormData(event)","：将请求体读取为 ",[215,3189,3192],{"href":3190,"rel":3191},"https://developer.mozilla.org/en-US/docs/Web/API/FormData",[229],"FormData",[276,3194,3195,3198],{},[300,3196,3197],{},"clearResponseHeaders(event)","：清除所有响应头。",[276,3200,3201,3204],{},[300,3202,3203],{},"removeResponseHeader(event, name)","：移除指定响应头。",[276,3206,3207,3210,3211,3216],{},[300,3208,3209],{},"serveStatic(event, options)","：平台无关的静态资源服务器。查看 ",[215,3212,3215],{"href":3213,"rel":3214},"https://github.com/unjs/listhen/blob/af6ea3af3fec4289c00b0ba589ca6f63c6a5dbbd/src/server/dev.ts#L66",[229],"listhen 源码"," 了解如何与 Node.js 一起使用示例。",[292,3218,3220],{"id":3219},"使用-hmr-实现轻松的-typescript-开发","使用 HMR 实现轻松的 TypeScript 开发",[191,3222,3223,3224,3229],{},"我们还发布了更新版 ",[215,3225,3228],{"href":3226,"rel":3227},"https://listhen.unjs.io",[229],"unjs/listhen","，可与 H3 应用无缝集成。",[191,3231,3232,3233,3236],{},"你只需创建一个 ",[300,3234,3235],{},"index.ts"," 文件：",[366,3238,3240],{"className":2260,"code":3239,"language":2262,"meta":195,"style":195},"import { createApp, eventHandler } from \"h3\";\n\nexport const app = createApp();\n\napp.use(\"/\", () => \"Hello world!\");\n",[300,3241,3242,3255,3259,3274,3278],{"__ignoreMap":195},[374,3243,3244,3246,3249,3251,3253],{"class":376,"line":377},[374,3245,387],{"class":386},[374,3247,3248],{"class":390}," { createApp, eventHandler } ",[374,3250,394],{"class":386},[374,3252,573],{"class":397},[374,3254,401],{"class":390},[374,3256,3257],{"class":376,"line":196},[374,3258,408],{"emptyLinePlaceholder":407},[374,3260,3261,3263,3266,3268,3270,3272],{"class":376,"line":404},[374,3262,1360],{"class":386},[374,3264,3265],{"class":386}," const",[374,3267,587],{"class":427},[374,3269,590],{"class":386},[374,3271,2298],{"class":414},[374,3273,975],{"class":390},[374,3275,3276],{"class":376,"line":411},[374,3277,408],{"emptyLinePlaceholder":407},[374,3279,3280,3282,3284,3286,3288,3290,3292,3295],{"class":376,"line":421},[374,3281,2309],{"class":390},[374,3283,1241],{"class":414},[374,3285,446],{"class":390},[374,3287,606],{"class":397},[374,3289,609],{"class":390},[374,3291,612],{"class":386},[374,3293,3294],{"class":397}," \"Hello world!\"",[374,3296,479],{"class":390},[191,3298,3299,3300,3303],{},"运行 ",[300,3301,3302],{},"npx listhen@latest -w ./index.ts"," 启动支持 TypeScript、热模块替换 (HMR) 和静态资源服务器的开发服务器。",[191,3305,3306],{},[215,3307,3310],{"href":3308,"rel":3309},"https://stackblitz.com/github/unjs/h3/tree/main/playground?startScript=dev",[229],"在线试玩",[191,3312,3313],{},[3314,3315],"img",{"alt":3316,"src":3317,"without-border":195},"listhen 截图","https://raw.githubusercontent.com/unjs/listhen/main/.assets/screenshot.png",[292,3319,3320],{"id":3320},"完整更新日志",[191,3322,3323,3324,530],{},"欲了解详细变更列表，请参阅 ",[215,3325,3328],{"href":3326,"rel":3327},"https://github.com/unjs/h3/releases/tag/v1.8.0",[229],"发布说明",[2109,3330,3331],{},"html pre.shiki code .sCsY4, html code.shiki .sCsY4{--shiki-light:#6A737D;--shiki-default:#6A737D;--shiki-dark:#6A737D}html pre.shiki code .so5gQ, html code.shiki .so5gQ{--shiki-light:#D73A49;--shiki-default:#F97583;--shiki-dark:#F97583}html pre.shiki code .slsVL, html code.shiki .slsVL{--shiki-light:#24292E;--shiki-default:#E1E4E8;--shiki-dark:#E1E4E8}html pre.shiki code .sfrk1, html code.shiki .sfrk1{--shiki-light:#032F62;--shiki-default:#9ECBFF;--shiki-dark:#9ECBFF}html pre.shiki code .suiK_, html code.shiki .suiK_{--shiki-light:#005CC5;--shiki-default:#79B8FF;--shiki-dark:#79B8FF}html pre.shiki code .shcOC, html code.shiki .shcOC{--shiki-light:#6F42C1;--shiki-default:#B392F0;--shiki-dark:#B392F0}html pre.shiki code .sQHwn, html code.shiki .sQHwn{--shiki-light:#E36209;--shiki-default:#FFAB70;--shiki-dark:#FFAB70}html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":195,"searchDepth":196,"depth":196,"links":3333},[3334,3335,3336,3337,3338,3339,3340,3341],{"id":2209,"depth":196,"text":2210},{"id":2421,"depth":196,"text":2422},{"id":2667,"depth":196,"text":2667},{"id":2830,"depth":196,"text":2830},{"id":2960,"depth":196,"text":2961},{"id":3170,"depth":196,"text":3170},{"id":3219,"depth":196,"text":3220},{"id":3320,"depth":196,"text":3320},"全新 H3 版本发布，支持 web 和 plain 适配器，支持 web 流，对象语法事件处理器，类型化事件处理请求等更多功能！",{"date":3344,"category":2126,"authors":3345,"icon":176},"2023-08-15",[3346],{"name":2129,"github":2130},{"icon":176},{"title":178,"description":3342},"Re1cTTDje6pH1csIjCo7PmnAs7fimcjey-lVSmYncZM",1757861509260]