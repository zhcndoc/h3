[{"data":1,"prerenderedAt":1347},["ShallowReactive",2],{"navigation":3,"-guide-basics-handler":185,"-guide-basics-handler-surround":1342},[4,91,133,161,168],{"title":5,"path":6,"stem":7,"children":8,"icon":90},"Guide","/guide","1.guide/0.index",[9,12,53,69],{"title":10,"path":6,"stem":7,"icon":11},"入门指南","pixel:play",{"title":5,"icon":13,"path":14,"stem":15,"children":16,"page":52},"ph:book-open-duotone","/guide/basics","1.guide/1.basics",[17,22,27,32,37,42,47],{"title":18,"path":19,"stem":20,"icon":21},"请求生命周期","/guide/basics/lifecycle","1.guide/1.basics/1.lifecycle","icon-park-outline:handle-round",{"title":23,"path":24,"stem":25,"icon":26},"路由","/guide/basics/routing","1.guide/1.basics/2.routing","solar:routing-bold",{"title":28,"path":29,"stem":30,"icon":31},"中间件","/guide/basics/middleware","1.guide/1.basics/3.middleware","mdi:middleware-outline",{"title":33,"path":34,"stem":35,"icon":36},"事件处理器","/guide/basics/handler","1.guide/1.basics/4.handler","mdi:function",{"title":38,"path":39,"stem":40,"icon":41},"发送响应","/guide/basics/response","1.guide/1.basics/5.response","tabler:json",{"title":43,"path":44,"stem":45,"icon":46},"错误处理","/guide/basics/error","1.guide/1.basics/6.error","tabler:error-404",{"title":48,"path":49,"stem":50,"icon":51},"嵌套应用","/guide/basics/nested-apps","1.guide/1.basics/7.nested-apps","material-symbols-light:layers-outline",false,{"title":54,"icon":55,"path":56,"stem":57,"children":58,"page":52},"API","material-symbols-light:api-rounded","/guide/api","1.guide/900.api",[59,64],{"title":60,"path":61,"stem":62,"icon":63},"H3","/guide/api/h3","1.guide/900.api/1.h3","material-symbols:bolt-rounded",{"title":65,"path":66,"stem":67,"icon":68},"H3Event","/guide/api/h3event","1.guide/900.api/2.h3event","material-symbols:data-object-rounded",{"title":70,"icon":71,"path":72,"stem":73,"children":74,"page":52},"Advanced","hugeicons:more-01","/guide/advanced","1.guide/901.advanced",[75,80,85],{"title":76,"path":77,"stem":78,"icon":79},"Plugins","/guide/advanced/plugins","1.guide/901.advanced/1.plugins","clarity:plugin-line",{"title":81,"path":82,"stem":83,"icon":84},"WebSockets","/guide/advanced/websocket","1.guide/901.advanced/2.websocket","hugeicons:live-streaming-02",{"title":86,"path":87,"stem":88,"icon":89},"每夜构建","/guide/advanced/nightly","1.guide/901.advanced/9.nightly","game-icons:barn-owl","i-ph:book-open-duotone",{"title":92,"path":93,"stem":94,"children":95,"icon":97},"H3 工具集","/utils","2.utils/0.index",[96,98,103,108,113,118,123,128],{"title":92,"path":93,"stem":94,"icon":97},"ph:function-bold",{"title":99,"path":100,"stem":101,"icon":102},"请求","/utils/request","2.utils/1.request","material-symbols-light:input",{"title":104,"path":105,"stem":106,"icon":107},"响应","/utils/response","2.utils/2.response","material-symbols-light:output",{"title":109,"path":110,"stem":111,"icon":112},"Cookie","/utils/cookie","2.utils/3.cookie","material-symbols:cookie-outline",{"title":114,"path":115,"stem":116,"icon":117},"安全","/utils/security","2.utils/4.security","wpf:key-security",{"title":119,"path":120,"stem":121,"icon":122},"代理","/utils/proxy","2.utils/5.proxy","arcticons:super-proxy",{"title":124,"path":125,"stem":126,"icon":127},"更多工具","/utils/more","2.utils/9.more","mingcute:plus-line",{"title":129,"path":130,"stem":131,"icon":132},"社区","/utils/community","2.utils/99.community","lets-icons:external",{"title":134,"path":135,"stem":136,"children":137,"icon":139},"示例","/examples","4.examples/0.index",[138,140,145,149,153,157],{"title":134,"path":135,"stem":136,"icon":139},"ph:code",{"title":141,"path":142,"stem":143,"icon":144},"Cookies","/examples/handle-cookie","4.examples/handle-cookie","ph:arrow-right",{"title":146,"path":147,"stem":148,"icon":144},"会话","/examples/handle-session","4.examples/handle-session",{"title":150,"path":151,"stem":152,"icon":144},"静态资源","/examples/serve-static-assets","4.examples/serve-static-assets",{"title":154,"path":155,"stem":156,"icon":144},"流式响应","/examples/stream-response","4.examples/stream-response",{"title":158,"path":159,"stem":160,"icon":144},"验证数据","/examples/validate-data","4.examples/validate-data",{"title":162,"path":163,"stem":164,"children":165,"icon":167},"从 v1 到 v2 的迁移指南","/migration","5.migration/0.index",[166],{"title":162,"path":163,"stem":164,"icon":167},"icons8:up-round",{"title":169,"path":170,"stem":171,"children":172,"page":-1},"Blog","/blog","99.blog",[173,177,181],{"title":174,"path":170,"stem":175,"icon":176},"博客","99.blog/index","i-lucide-file-text",{"title":178,"path":179,"stem":180,"icon":176},"H3 1.8 - 迈向 Web 的边缘","/blog/v1.8","99.blog/1.v1.8",{"title":182,"path":183,"stem":184,"icon":176},"H3 v2 测试版","/blog/v2-beta","99.blog/2.v2-beta",{"id":186,"title":33,"body":187,"description":1336,"extension":1337,"meta":1338,"navigation":1339,"path":34,"seo":1340,"stem":35,"__hash__":1341},"content/1.guide/1.basics/4.handler.md",{"type":188,"value":189,"toc":1323,"icon":36},"minimark",[190,199,321,336,339,366,370,374,380,451,455,457,460,463,598,604,611,620,719,722,728,731,815,818,821,976,979,982,986,1011,1168,1172,1183,1189,1319],[191,192,193,194,198],"p",{},"你可以使用 ",[195,196,197],"code",{},"defineHandler"," 定义带类型的事件处理器。",[200,201,206],"pre",{"className":202,"code":203,"language":204,"meta":205,"style":205},"language-js shiki shiki-themes github-light github-dark github-dark","import { H3, defineHandler } from \"h3\";\n\nconst app = new H3();\n\nconst handler = defineHandler((event) => \"Response\");\n\napp.get(\"/\", handler);\n","js","",[195,207,208,231,238,261,266,298,303],{"__ignoreMap":205},[209,210,213,217,221,224,228],"span",{"class":211,"line":212},"line",1,[209,214,216],{"class":215},"so5gQ","import",[209,218,220],{"class":219},"slsVL"," { H3, defineHandler } ",[209,222,223],{"class":215},"from",[209,225,227],{"class":226},"sfrk1"," \"h3\"",[209,229,230],{"class":219},";\n",[209,232,234],{"class":211,"line":233},2,[209,235,237],{"emptyLinePlaceholder":236},true,"\n",[209,239,241,244,248,251,254,258],{"class":211,"line":240},3,[209,242,243],{"class":215},"const",[209,245,247],{"class":246},"suiK_"," app",[209,249,250],{"class":215}," =",[209,252,253],{"class":215}," new",[209,255,257],{"class":256},"shcOC"," H3",[209,259,260],{"class":219},"();\n",[209,262,264],{"class":211,"line":263},4,[209,265,237],{"emptyLinePlaceholder":236},[209,267,269,271,274,276,279,282,286,289,292,295],{"class":211,"line":268},5,[209,270,243],{"class":215},[209,272,273],{"class":246}," handler",[209,275,250],{"class":215},[209,277,278],{"class":256}," defineHandler",[209,280,281],{"class":219},"((",[209,283,285],{"class":284},"sQHwn","event",[209,287,288],{"class":219},") ",[209,290,291],{"class":215},"=>",[209,293,294],{"class":226}," \"Response\"",[209,296,297],{"class":219},");\n",[209,299,301],{"class":211,"line":300},6,[209,302,237],{"emptyLinePlaceholder":236},[209,304,306,309,312,315,318],{"class":211,"line":305},7,[209,307,308],{"class":219},"app.",[209,310,311],{"class":256},"get",[209,313,314],{"class":219},"(",[209,316,317],{"class":226},"\"/\"",[209,319,320],{"class":219},", handler);\n",[322,323,324],"note",{},[191,325,326,327,329,330,335],{},"\n使用 ",[195,328,197],{}," 是可选的。\n你也可以简单地使用一个接受 ",[331,332,333],"a",{"href":66},[195,334,65],{}," 并返回响应的函数。",[191,337,338],{},"回调函数可以是同步的也可以是异步的：",[200,340,342],{"className":202,"code":341,"language":204,"meta":205,"style":205},"defineHandler(async (event) => \"Response\");\n",[195,343,344],{"__ignoreMap":205},[209,345,346,348,350,353,356,358,360,362,364],{"class":211,"line":212},[209,347,197],{"class":256},[209,349,314],{"class":219},[209,351,352],{"class":215},"async",[209,354,355],{"class":219}," (",[209,357,285],{"class":284},[209,359,288],{"class":219},[209,361,291],{"class":215},[209,363,294],{"class":226},[209,365,297],{"class":219},[367,368,369],"h2",{"id":369},"对象语法",[371,372,373],"h3",{"id":373},"middleware",[191,375,376,377,379],{},"你可以选择性地注册一些 ",[331,378,28],{"href":29}," 来与事件处理器一起运行，以拦截请求、响应或错误。",[200,381,383],{"className":202,"code":382,"language":204,"meta":205,"style":205},"import { basicAuth } from \"h3\";\n\ndefineHandler({\n  middleware: [basicAuth({ password: \"test\" })],\n  handler: (event) => \"Hi!\",\n});\n",[195,384,385,398,402,409,426,446],{"__ignoreMap":205},[209,386,387,389,392,394,396],{"class":211,"line":212},[209,388,216],{"class":215},[209,390,391],{"class":219}," { basicAuth } ",[209,393,223],{"class":215},[209,395,227],{"class":226},[209,397,230],{"class":219},[209,399,400],{"class":211,"line":233},[209,401,237],{"emptyLinePlaceholder":236},[209,403,404,406],{"class":211,"line":240},[209,405,197],{"class":256},[209,407,408],{"class":219},"({\n",[209,410,411,414,417,420,423],{"class":211,"line":263},[209,412,413],{"class":219},"  middleware: [",[209,415,416],{"class":256},"basicAuth",[209,418,419],{"class":219},"({ password: ",[209,421,422],{"class":226},"\"test\"",[209,424,425],{"class":219}," })],\n",[209,427,428,431,434,436,438,440,443],{"class":211,"line":268},[209,429,430],{"class":256},"  handler",[209,432,433],{"class":219},": (",[209,435,285],{"class":284},[209,437,288],{"class":219},[209,439,291],{"class":215},[209,441,442],{"class":226}," \"Hi!\"",[209,444,445],{"class":219},",\n",[209,447,448],{"class":211,"line":300},[209,449,450],{"class":219},"});\n",[452,453],"read-more",{"to":39,"title":454},"响应处理",[452,456],{"to":66},[371,458,459],{"id":459},"meta",[191,461,462],{},"你可以定义可选的路由元数据附加到处理器上，并从任何其他中间件中访问它们。",[200,464,466],{"className":202,"code":465,"language":204,"meta":205,"style":205},"import { H3, defineHandler } from \"h3\";\n\nconst app = new H3();\n\napp.use((event) => {\n  console.log(event.context.matchedRoute?.meta); // { tag: \"admin\" }\n});\n\napp.get(\"/admin/**\", defineHandler({\n  meta: { tag: \"admin\" },\n  handler: (event) => \"Hi!\",\n})\n",[195,467,468,480,484,498,502,520,535,539,544,563,575,592],{"__ignoreMap":205},[209,469,470,472,474,476,478],{"class":211,"line":212},[209,471,216],{"class":215},[209,473,220],{"class":219},[209,475,223],{"class":215},[209,477,227],{"class":226},[209,479,230],{"class":219},[209,481,482],{"class":211,"line":233},[209,483,237],{"emptyLinePlaceholder":236},[209,485,486,488,490,492,494,496],{"class":211,"line":240},[209,487,243],{"class":215},[209,489,247],{"class":246},[209,491,250],{"class":215},[209,493,253],{"class":215},[209,495,257],{"class":256},[209,497,260],{"class":219},[209,499,500],{"class":211,"line":263},[209,501,237],{"emptyLinePlaceholder":236},[209,503,504,506,509,511,513,515,517],{"class":211,"line":268},[209,505,308],{"class":219},[209,507,508],{"class":256},"use",[209,510,281],{"class":219},[209,512,285],{"class":284},[209,514,288],{"class":219},[209,516,291],{"class":215},[209,518,519],{"class":219}," {\n",[209,521,522,525,528,531],{"class":211,"line":300},[209,523,524],{"class":219},"  console.",[209,526,527],{"class":256},"log",[209,529,530],{"class":219},"(event.context.matchedRoute?.meta); ",[209,532,534],{"class":533},"sCsY4","// { tag: \"admin\" }\n",[209,536,537],{"class":211,"line":305},[209,538,450],{"class":219},[209,540,542],{"class":211,"line":541},8,[209,543,237],{"emptyLinePlaceholder":236},[209,545,547,549,551,553,556,559,561],{"class":211,"line":546},9,[209,548,308],{"class":219},[209,550,311],{"class":256},[209,552,314],{"class":219},[209,554,555],{"class":226},"\"/admin/**\"",[209,557,558],{"class":219},", ",[209,560,197],{"class":256},[209,562,408],{"class":219},[209,564,566,569,572],{"class":211,"line":565},10,[209,567,568],{"class":219},"  meta: { tag: ",[209,570,571],{"class":226},"\"admin\"",[209,573,574],{"class":219}," },\n",[209,576,578,580,582,584,586,588,590],{"class":211,"line":577},11,[209,579,430],{"class":256},[209,581,433],{"class":219},[209,583,285],{"class":284},[209,585,288],{"class":219},[209,587,291],{"class":215},[209,589,442],{"class":226},[209,591,445],{"class":219},[209,593,595],{"class":211,"line":594},12,[209,596,597],{"class":219},"})\n",[452,599,601],{"to":600},"/guide/basics/routing#route-meta",[191,602,603],{},"注册到应用实例时也可以添加路由元数据。",[367,605,607,608],{"id":606},"处理器-fetch","处理器 ",[195,609,610],{},".fetch",[191,612,613,614,616,617,619],{},"用 ",[195,615,197],{}," 定义的事件处理器，可以作为 Web 处理器使用，甚至不需要使用 ",[331,618,60],{"href":61}," 类。",[200,621,623],{"className":202,"code":622,"language":204,"meta":205,"style":205},"const handler = defineHandler(async (event) => `Request: ${event.req.url}`);\n\nconst response = await handler.fetch(\"http://localhost/\");\nconsole.log(response, await response.text());\n",[195,624,625,668,672,697],{"__ignoreMap":205},[209,626,627,629,631,633,635,637,639,641,643,645,647,650,652,655,658,660,663,666],{"class":211,"line":212},[209,628,243],{"class":215},[209,630,273],{"class":246},[209,632,250],{"class":215},[209,634,278],{"class":256},[209,636,314],{"class":219},[209,638,352],{"class":215},[209,640,355],{"class":219},[209,642,285],{"class":284},[209,644,288],{"class":219},[209,646,291],{"class":215},[209,648,649],{"class":226}," `Request: ${",[209,651,285],{"class":219},[209,653,654],{"class":226},".",[209,656,657],{"class":219},"req",[209,659,654],{"class":226},[209,661,662],{"class":219},"url",[209,664,665],{"class":226},"}`",[209,667,297],{"class":219},[209,669,670],{"class":211,"line":233},[209,671,237],{"emptyLinePlaceholder":236},[209,673,674,676,679,681,684,687,690,692,695],{"class":211,"line":240},[209,675,243],{"class":215},[209,677,678],{"class":246}," response",[209,680,250],{"class":215},[209,682,683],{"class":215}," await",[209,685,686],{"class":219}," handler.",[209,688,689],{"class":256},"fetch",[209,691,314],{"class":219},[209,693,694],{"class":226},"\"http://localhost/\"",[209,696,297],{"class":219},[209,698,699,702,704,707,710,713,716],{"class":211,"line":263},[209,700,701],{"class":219},"console.",[209,703,527],{"class":256},[209,705,706],{"class":219},"(response, ",[209,708,709],{"class":215},"await",[209,711,712],{"class":219}," response.",[209,714,715],{"class":256},"text",[209,717,718],{"class":219},"());\n",[367,720,721],{"id":721},"延迟处理器",[191,723,193,724,727],{},[195,725,726],{},"defineLazyEventHandler"," 定义延迟事件处理器。这允许你定义一些仅在第一次收到匹配路由请求时执行一次的一次性逻辑。",[191,729,730],{},"延迟事件处理器必须返回一个事件处理器。",[200,732,734],{"className":202,"code":733,"language":204,"meta":205,"style":205},"import { defineLazyEventHandler } from \"h3\";\n\ndefineLazyEventHandler(async () => {\n  await initSomething(); // 只会执行一次\n  return (event) => {\n    return \"Response\";\n  };\n});\n",[195,735,736,749,753,768,782,797,806,811],{"__ignoreMap":205},[209,737,738,740,743,745,747],{"class":211,"line":212},[209,739,216],{"class":215},[209,741,742],{"class":219}," { defineLazyEventHandler } ",[209,744,223],{"class":215},[209,746,227],{"class":226},[209,748,230],{"class":219},[209,750,751],{"class":211,"line":233},[209,752,237],{"emptyLinePlaceholder":236},[209,754,755,757,759,761,764,766],{"class":211,"line":240},[209,756,726],{"class":256},[209,758,314],{"class":219},[209,760,352],{"class":215},[209,762,763],{"class":219}," () ",[209,765,291],{"class":215},[209,767,519],{"class":219},[209,769,770,773,776,779],{"class":211,"line":263},[209,771,772],{"class":215},"  await",[209,774,775],{"class":256}," initSomething",[209,777,778],{"class":219},"(); ",[209,780,781],{"class":533},"// 只会执行一次\n",[209,783,784,787,789,791,793,795],{"class":211,"line":268},[209,785,786],{"class":215},"  return",[209,788,355],{"class":219},[209,790,285],{"class":284},[209,792,288],{"class":219},[209,794,291],{"class":215},[209,796,519],{"class":219},[209,798,799,802,804],{"class":211,"line":300},[209,800,801],{"class":215},"    return",[209,803,294],{"class":226},[209,805,230],{"class":219},[209,807,808],{"class":211,"line":305},[209,809,810],{"class":219},"  };\n",[209,812,813],{"class":211,"line":541},[209,814,450],{"class":219},[191,816,817],{},"这对于定义一些一次性逻辑非常有用，比如配置、类初始化、繁重的计算等。",[191,819,820],{},"另一个用例是延迟加载路由代码块：",[822,823,824,930],"CodeGroup",{},[200,825,828],{"className":202,"code":826,"filename":827,"language":204,"meta":205,"style":205},"import { H3, defineLazyEventHandler } from \"h3\";\n\nconst app = new H3();\n\napp.all(\n  \"/route\",\n  defineLazyEventHandler(() =>\n    import(\"./route.mjs\").then((mod) => mod.default),\n  ),\n);\n","app.mjs",[195,829,830,843,847,861,865,875,882,893,921,926],{"__ignoreMap":205},[209,831,832,834,837,839,841],{"class":211,"line":212},[209,833,216],{"class":215},[209,835,836],{"class":219}," { H3, defineLazyEventHandler } ",[209,838,223],{"class":215},[209,840,227],{"class":226},[209,842,230],{"class":219},[209,844,845],{"class":211,"line":233},[209,846,237],{"emptyLinePlaceholder":236},[209,848,849,851,853,855,857,859],{"class":211,"line":240},[209,850,243],{"class":215},[209,852,247],{"class":246},[209,854,250],{"class":215},[209,856,253],{"class":215},[209,858,257],{"class":256},[209,860,260],{"class":219},[209,862,863],{"class":211,"line":263},[209,864,237],{"emptyLinePlaceholder":236},[209,866,867,869,872],{"class":211,"line":268},[209,868,308],{"class":219},[209,870,871],{"class":256},"all",[209,873,874],{"class":219},"(\n",[209,876,877,880],{"class":211,"line":300},[209,878,879],{"class":226},"  \"/route\"",[209,881,445],{"class":219},[209,883,884,887,890],{"class":211,"line":305},[209,885,886],{"class":256},"  defineLazyEventHandler",[209,888,889],{"class":219},"(() ",[209,891,892],{"class":215},"=>\n",[209,894,895,898,900,903,906,909,911,914,916,918],{"class":211,"line":541},[209,896,897],{"class":215},"    import",[209,899,314],{"class":219},[209,901,902],{"class":226},"\"./route.mjs\"",[209,904,905],{"class":219},").",[209,907,908],{"class":256},"then",[209,910,281],{"class":219},[209,912,913],{"class":284},"mod",[209,915,288],{"class":219},[209,917,291],{"class":215},[209,919,920],{"class":219}," mod.default),\n",[209,922,923],{"class":211,"line":546},[209,924,925],{"class":219},"  ),\n",[209,927,928],{"class":211,"line":565},[209,929,297],{"class":219},[200,931,934],{"className":202,"code":932,"filename":933,"language":204,"meta":205,"style":205},"import { defineHandler } from \"h3\";\n\nexport default defineHandler((event) => \"Hello!\");\n","route.mjs",[195,935,936,949,953],{"__ignoreMap":205},[209,937,938,940,943,945,947],{"class":211,"line":212},[209,939,216],{"class":215},[209,941,942],{"class":219}," { defineHandler } ",[209,944,223],{"class":215},[209,946,227],{"class":226},[209,948,230],{"class":219},[209,950,951],{"class":211,"line":233},[209,952,237],{"emptyLinePlaceholder":236},[209,954,955,958,961,963,965,967,969,971,974],{"class":211,"line":240},[209,956,957],{"class":215},"export",[209,959,960],{"class":215}," default",[209,962,278],{"class":256},[209,964,281],{"class":219},[209,966,285],{"class":284},[209,968,288],{"class":219},[209,970,291],{"class":215},[209,972,973],{"class":226}," \"Hello!\"",[209,975,297],{"class":219},[367,977,978],{"id":978},"转换为处理器",[191,980,981],{},"有些情况下你可能想将为 Node.js 或其他框架制作的事件处理器或工具转换为 H3。\n内置了相应的工具函数来实现此功能。",[371,983,985],{"id":984},"从-web-处理器","从 Web 处理器",[191,987,988,989,995,996,1001,1002,1005,1006,1010],{},"具有 ",[331,990,994],{"href":991,"rel":992},"https://developer.mozilla.org/en-US/docs/Web/API/Request",[993],"nofollow","Request"," => ",[331,997,1000],{"href":998,"rel":999},"https://developer.mozilla.org/en-US/docs/Web/API/Response",[993],"Response"," 签名的请求处理器，可以使用 ",[195,1003,1004],{},"fromWebHandler"," 工具或 ",[331,1007,1009],{"href":1008},"/guide/api/h3#h3mount","H3.mount"," 转换成 H3 事件处理器。",[200,1012,1014],{"className":202,"code":1013,"language":204,"meta":205,"style":205},"import { H3, fromWebHandler } from \"h3\";\n\nexport const app = new H3();\n\nconst webHandler = (request) => new Response(\"👋 Hello!\"));\n\n// 使用 fromWebHandler 工具\napp.all(\"/web\", fromWebHandler(webHandler));\n\n// 使用简单封装\napp.all(\"/web\", event => webHandler(event.req));\n\n// 使用 app.mount\napp.mount(\"/web\", webHandler)\n",[195,1015,1016,1029,1033,1050,1054,1085,1089,1094,1112,1116,1121,1143,1147,1153],{"__ignoreMap":205},[209,1017,1018,1020,1023,1025,1027],{"class":211,"line":212},[209,1019,216],{"class":215},[209,1021,1022],{"class":219}," { H3, fromWebHandler } ",[209,1024,223],{"class":215},[209,1026,227],{"class":226},[209,1028,230],{"class":219},[209,1030,1031],{"class":211,"line":233},[209,1032,237],{"emptyLinePlaceholder":236},[209,1034,1035,1037,1040,1042,1044,1046,1048],{"class":211,"line":240},[209,1036,957],{"class":215},[209,1038,1039],{"class":215}," const",[209,1041,247],{"class":246},[209,1043,250],{"class":215},[209,1045,253],{"class":215},[209,1047,257],{"class":256},[209,1049,260],{"class":219},[209,1051,1052],{"class":211,"line":263},[209,1053,237],{"emptyLinePlaceholder":236},[209,1055,1056,1058,1061,1063,1065,1068,1070,1072,1074,1077,1079,1082],{"class":211,"line":268},[209,1057,243],{"class":215},[209,1059,1060],{"class":256}," webHandler",[209,1062,250],{"class":215},[209,1064,355],{"class":219},[209,1066,1067],{"class":284},"request",[209,1069,288],{"class":219},[209,1071,291],{"class":215},[209,1073,253],{"class":215},[209,1075,1076],{"class":256}," Response",[209,1078,314],{"class":219},[209,1080,1081],{"class":226},"\"👋 Hello!\"",[209,1083,1084],{"class":219},"));\n",[209,1086,1087],{"class":211,"line":300},[209,1088,237],{"emptyLinePlaceholder":236},[209,1090,1091],{"class":211,"line":305},[209,1092,1093],{"class":533},"// 使用 fromWebHandler 工具\n",[209,1095,1096,1098,1100,1102,1105,1107,1109],{"class":211,"line":541},[209,1097,308],{"class":219},[209,1099,871],{"class":256},[209,1101,314],{"class":219},[209,1103,1104],{"class":226},"\"/web\"",[209,1106,558],{"class":219},[209,1108,1004],{"class":256},[209,1110,1111],{"class":219},"(webHandler));\n",[209,1113,1114],{"class":211,"line":546},[209,1115,237],{"emptyLinePlaceholder":236},[209,1117,1118],{"class":211,"line":565},[209,1119,1120],{"class":533},"// 使用简单封装\n",[209,1122,1123,1125,1127,1129,1131,1133,1135,1138,1140],{"class":211,"line":577},[209,1124,308],{"class":219},[209,1126,871],{"class":256},[209,1128,314],{"class":219},[209,1130,1104],{"class":226},[209,1132,558],{"class":219},[209,1134,285],{"class":284},[209,1136,1137],{"class":215}," =>",[209,1139,1060],{"class":256},[209,1141,1142],{"class":219},"(event.req));\n",[209,1144,1145],{"class":211,"line":594},[209,1146,237],{"emptyLinePlaceholder":236},[209,1148,1150],{"class":211,"line":1149},13,[209,1151,1152],{"class":533},"// 使用 app.mount\n",[209,1154,1156,1158,1161,1163,1165],{"class":211,"line":1155},14,[209,1157,308],{"class":219},[209,1159,1160],{"class":256},"mount",[209,1162,314],{"class":219},[209,1164,1104],{"class":226},[209,1166,1167],{"class":219},", webHandler)\n",[371,1169,1171],{"id":1170},"从-nodejs-处理器","从 Node.js 处理器",[191,1173,1174,1175,1178,1179,1182],{},"如果你有一个使用 ",[195,1176,1177],{},"(req, res) => {}"," 语法的传统 Node.js 请求处理器，你可以使用 ",[195,1180,1181],{},"fromNodeHandler"," 将其转换为 h3 事件处理器。",[1184,1185,1186],"important",{},[191,1187,1188],{},"\nNode.js 事件处理器只能在 Node.js 服务器运行时执行！",[200,1190,1192],{"className":202,"code":1191,"language":204,"meta":205,"style":205},"import { H3, fromNodeHandler } from \"h3\";\n\n// 强制使用 Node.js 兼容（也适用于 Bun 和 Deno）\nimport { serve } from \"h3/node\";\n\nexport const app = new H3();\n\nconst nodeHandler = (req, res) => {\n  res.end(\"Node handlers work!\");\n};\n\napp.get(\"/web\", fromNodeHandler(nodeHandler));\n",[195,1193,1194,1207,1211,1216,1230,1234,1250,1254,1278,1293,1298,1302],{"__ignoreMap":205},[209,1195,1196,1198,1201,1203,1205],{"class":211,"line":212},[209,1197,216],{"class":215},[209,1199,1200],{"class":219}," { H3, fromNodeHandler } ",[209,1202,223],{"class":215},[209,1204,227],{"class":226},[209,1206,230],{"class":219},[209,1208,1209],{"class":211,"line":233},[209,1210,237],{"emptyLinePlaceholder":236},[209,1212,1213],{"class":211,"line":240},[209,1214,1215],{"class":533},"// 强制使用 Node.js 兼容（也适用于 Bun 和 Deno）\n",[209,1217,1218,1220,1223,1225,1228],{"class":211,"line":263},[209,1219,216],{"class":215},[209,1221,1222],{"class":219}," { serve } ",[209,1224,223],{"class":215},[209,1226,1227],{"class":226}," \"h3/node\"",[209,1229,230],{"class":219},[209,1231,1232],{"class":211,"line":268},[209,1233,237],{"emptyLinePlaceholder":236},[209,1235,1236,1238,1240,1242,1244,1246,1248],{"class":211,"line":300},[209,1237,957],{"class":215},[209,1239,1039],{"class":215},[209,1241,247],{"class":246},[209,1243,250],{"class":215},[209,1245,253],{"class":215},[209,1247,257],{"class":256},[209,1249,260],{"class":219},[209,1251,1252],{"class":211,"line":305},[209,1253,237],{"emptyLinePlaceholder":236},[209,1255,1256,1258,1261,1263,1265,1267,1269,1272,1274,1276],{"class":211,"line":541},[209,1257,243],{"class":215},[209,1259,1260],{"class":256}," nodeHandler",[209,1262,250],{"class":215},[209,1264,355],{"class":219},[209,1266,657],{"class":284},[209,1268,558],{"class":219},[209,1270,1271],{"class":284},"res",[209,1273,288],{"class":219},[209,1275,291],{"class":215},[209,1277,519],{"class":219},[209,1279,1280,1283,1286,1288,1291],{"class":211,"line":546},[209,1281,1282],{"class":219},"  res.",[209,1284,1285],{"class":256},"end",[209,1287,314],{"class":219},[209,1289,1290],{"class":226},"\"Node handlers work!\"",[209,1292,297],{"class":219},[209,1294,1295],{"class":211,"line":565},[209,1296,1297],{"class":219},"};\n",[209,1299,1300],{"class":211,"line":577},[209,1301,237],{"emptyLinePlaceholder":236},[209,1303,1304,1306,1308,1310,1312,1314,1316],{"class":211,"line":594},[209,1305,308],{"class":219},[209,1307,311],{"class":256},[209,1309,314],{"class":219},[209,1311,1104],{"class":226},[209,1313,558],{"class":219},[209,1315,1181],{"class":256},[209,1317,1318],{"class":219},"(nodeHandler));\n",[1320,1321,1322],"style",{},"html pre.shiki code .so5gQ, html code.shiki .so5gQ{--shiki-light:#D73A49;--shiki-default:#F97583;--shiki-dark:#F97583}html pre.shiki code .slsVL, html code.shiki .slsVL{--shiki-light:#24292E;--shiki-default:#E1E4E8;--shiki-dark:#E1E4E8}html pre.shiki code .sfrk1, html code.shiki .sfrk1{--shiki-light:#032F62;--shiki-default:#9ECBFF;--shiki-dark:#9ECBFF}html pre.shiki code .suiK_, html code.shiki .suiK_{--shiki-light:#005CC5;--shiki-default:#79B8FF;--shiki-dark:#79B8FF}html pre.shiki code .shcOC, html code.shiki .shcOC{--shiki-light:#6F42C1;--shiki-default:#B392F0;--shiki-dark:#B392F0}html pre.shiki code .sQHwn, html code.shiki .sQHwn{--shiki-light:#E36209;--shiki-default:#FFAB70;--shiki-dark:#FFAB70}html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html pre.shiki code .sCsY4, html code.shiki .sCsY4{--shiki-light:#6A737D;--shiki-default:#6A737D;--shiki-dark:#6A737D}",{"title":205,"searchDepth":233,"depth":233,"links":1324},[1325,1329,1331,1332],{"id":369,"depth":233,"text":369,"children":1326},[1327,1328],{"id":373,"depth":240,"text":373},{"id":459,"depth":240,"text":459},{"id":606,"depth":233,"text":1330},"处理器 .fetch",{"id":721,"depth":233,"text":721},{"id":978,"depth":233,"text":978,"children":1333},[1334,1335],{"id":984,"depth":240,"text":985},{"id":1170,"depth":240,"text":1171},"事件处理器是一个接收 H3Event 并返回响应的函数。","md",{"icon":36},{"icon":36},{"title":33,"description":1336},"29jI2hnmCKzyOE001bMgrJqw3YrL7vUG0Z6XD8hBfe0",[1343,1345],{"title":28,"path":29,"stem":30,"description":1344,"icon":31,"children":-1},"使用 H3 中间件拦截请求、响应和错误。",{"title":38,"path":39,"stem":40,"description":1346,"icon":41,"children":-1},"H3 会自动将任何返回值转换为 web 响应。",1757861511596]