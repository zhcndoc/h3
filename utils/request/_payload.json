[{"data":1,"prerenderedAt":1774},["ShallowReactive",2],{"navigation":3,"-utils-request":185,"-utils-request-surround":1770},[4,91,133,161,168],{"title":5,"path":6,"stem":7,"children":8,"icon":90},"Guide","/guide","1.guide/0.index",[9,12,53,69],{"title":10,"path":6,"stem":7,"icon":11},"入门指南","pixel:play",{"title":5,"icon":13,"path":14,"stem":15,"children":16,"page":52},"ph:book-open-duotone","/guide/basics","1.guide/1.basics",[17,22,27,32,37,42,47],{"title":18,"path":19,"stem":20,"icon":21},"请求生命周期","/guide/basics/lifecycle","1.guide/1.basics/1.lifecycle","icon-park-outline:handle-round",{"title":23,"path":24,"stem":25,"icon":26},"路由","/guide/basics/routing","1.guide/1.basics/2.routing","solar:routing-bold",{"title":28,"path":29,"stem":30,"icon":31},"中间件","/guide/basics/middleware","1.guide/1.basics/3.middleware","mdi:middleware-outline",{"title":33,"path":34,"stem":35,"icon":36},"事件处理器","/guide/basics/handler","1.guide/1.basics/4.handler","mdi:function",{"title":38,"path":39,"stem":40,"icon":41},"发送响应","/guide/basics/response","1.guide/1.basics/5.response","tabler:json",{"title":43,"path":44,"stem":45,"icon":46},"错误处理","/guide/basics/error","1.guide/1.basics/6.error","tabler:error-404",{"title":48,"path":49,"stem":50,"icon":51},"嵌套应用","/guide/basics/nested-apps","1.guide/1.basics/7.nested-apps","material-symbols-light:layers-outline",false,{"title":54,"icon":55,"path":56,"stem":57,"children":58,"page":52},"API","material-symbols-light:api-rounded","/guide/api","1.guide/900.api",[59,64],{"title":60,"path":61,"stem":62,"icon":63},"H3","/guide/api/h3","1.guide/900.api/1.h3","material-symbols:bolt-rounded",{"title":65,"path":66,"stem":67,"icon":68},"H3Event","/guide/api/h3event","1.guide/900.api/2.h3event","material-symbols:data-object-rounded",{"title":70,"icon":71,"path":72,"stem":73,"children":74,"page":52},"Advanced","hugeicons:more-01","/guide/advanced","1.guide/901.advanced",[75,80,85],{"title":76,"path":77,"stem":78,"icon":79},"Plugins","/guide/advanced/plugins","1.guide/901.advanced/1.plugins","clarity:plugin-line",{"title":81,"path":82,"stem":83,"icon":84},"WebSockets","/guide/advanced/websocket","1.guide/901.advanced/2.websocket","hugeicons:live-streaming-02",{"title":86,"path":87,"stem":88,"icon":89},"每夜构建","/guide/advanced/nightly","1.guide/901.advanced/9.nightly","game-icons:barn-owl","i-ph:book-open-duotone",{"title":92,"path":93,"stem":94,"children":95,"icon":97},"H3 工具集","/utils","2.utils/0.index",[96,98,103,108,113,118,123,128],{"title":92,"path":93,"stem":94,"icon":97},"ph:function-bold",{"title":99,"path":100,"stem":101,"icon":102},"请求","/utils/request","2.utils/1.request","material-symbols-light:input",{"title":104,"path":105,"stem":106,"icon":107},"响应","/utils/response","2.utils/2.response","material-symbols-light:output",{"title":109,"path":110,"stem":111,"icon":112},"Cookie","/utils/cookie","2.utils/3.cookie","material-symbols:cookie-outline",{"title":114,"path":115,"stem":116,"icon":117},"安全","/utils/security","2.utils/4.security","wpf:key-security",{"title":119,"path":120,"stem":121,"icon":122},"代理","/utils/proxy","2.utils/5.proxy","arcticons:super-proxy",{"title":124,"path":125,"stem":126,"icon":127},"更多工具","/utils/more","2.utils/9.more","mingcute:plus-line",{"title":129,"path":130,"stem":131,"icon":132},"社区","/utils/community","2.utils/99.community","lets-icons:external",{"title":134,"path":135,"stem":136,"children":137,"icon":139},"示例","/examples","4.examples/0.index",[138,140,145,149,153,157],{"title":134,"path":135,"stem":136,"icon":139},"ph:code",{"title":141,"path":142,"stem":143,"icon":144},"Cookies","/examples/handle-cookie","4.examples/handle-cookie","ph:arrow-right",{"title":146,"path":147,"stem":148,"icon":144},"会话","/examples/handle-session","4.examples/handle-session",{"title":150,"path":151,"stem":152,"icon":144},"静态资源","/examples/serve-static-assets","4.examples/serve-static-assets",{"title":154,"path":155,"stem":156,"icon":144},"流式响应","/examples/stream-response","4.examples/stream-response",{"title":158,"path":159,"stem":160,"icon":144},"验证数据","/examples/validate-data","4.examples/validate-data",{"title":162,"path":163,"stem":164,"children":165,"icon":167},"从 v1 到 v2 的迁移指南","/migration","5.migration/0.index",[166],{"title":162,"path":163,"stem":164,"icon":167},"icons8:up-round",{"title":169,"path":170,"stem":171,"children":172,"page":-1},"Blog","/blog","99.blog",[173,177,181],{"title":174,"path":170,"stem":175,"icon":176},"博客","99.blog/index","i-lucide-file-text",{"title":178,"path":179,"stem":180,"icon":176},"H3 1.8 - 迈向 Web 的边缘","/blog/v1.8","99.blog/1.v1.8",{"title":182,"path":183,"stem":184,"icon":176},"H3 v2 测试版","/blog/v2-beta","99.blog/2.v2-beta",{"id":186,"title":99,"body":187,"description":1763,"extension":1764,"meta":1765,"navigation":1767,"path":100,"seo":1768,"stem":101,"__hash__":1769},"content/2.utils/1.request.md",{"type":188,"value":189,"toc":1739,"icon":102},"minimark",[190,195,203,207,213,293,299,306,313,317,412,416,566,570,576,587,590,596,603,606,624,628,678,684,687,691,738,744,747,759,762,766,812,818,821,831,838,842,888,894,897,911,914,918,964,970,973,982,992,996,1042,1048,1051,1064,1068,1116,1122,1125,1135,1139,1185,1191,1194,1200,1204,1293,1297,1391,1397,1400,1409,1415,1419,1501,1505,1592,1598,1601,1611,1615,1704,1710,1720,1723,1726,1732,1735],[191,192,194],"h2",{"id":193},"body","Body",[196,197,199],"h3",{"id":198},"readbodyevent",[200,201,202],"code",{},"readBody(event)",[204,205,206],"p",{},"读取请求体并尝试使用 JSON.parse 或 URLSearchParams 解析。",[204,208,209],{},[210,211,212],"strong",{},"示例：",[214,215,220],"pre",{"className":216,"code":217,"language":218,"meta":219,"style":219},"language-ts shiki shiki-themes github-light github-dark github-dark","app.get(\"/\", async (event) => {\n  const body = await readBody(event);\n});\n","ts","",[200,221,222,265,287],{"__ignoreMap":219},[223,224,227,231,235,238,242,245,249,252,256,259,262],"span",{"class":225,"line":226},"line",1,[223,228,230],{"class":229},"slsVL","app.",[223,232,234],{"class":233},"shcOC","get",[223,236,237],{"class":229},"(",[223,239,241],{"class":240},"sfrk1","\"/\"",[223,243,244],{"class":229},", ",[223,246,248],{"class":247},"so5gQ","async",[223,250,251],{"class":229}," (",[223,253,255],{"class":254},"sQHwn","event",[223,257,258],{"class":229},") ",[223,260,261],{"class":247},"=>",[223,263,264],{"class":229}," {\n",[223,266,268,271,275,278,281,284],{"class":225,"line":267},2,[223,269,270],{"class":247},"  const",[223,272,274],{"class":273},"suiK_"," body",[223,276,277],{"class":247}," =",[223,279,280],{"class":247}," await",[223,282,283],{"class":233}," readBody",[223,285,286],{"class":229},"(event);\n",[223,288,290],{"class":225,"line":289},3,[223,291,292],{"class":229},"});\n",[196,294,296],{"id":295},"readvalidatedbodyevent-validate",[200,297,298],{},"readValidatedBody(event, validate)",[204,300,301,302,305],{},"尝试通过 ",[200,303,304],{},"readBody"," 读取请求体，然后使用提供的验证模式或函数进行验证，验证失败抛出错误，成功返回结果。",[204,307,308,309,312],{},"你可以使用一个简单的函数验证请求体，或者使用与标准架构兼容的库如 ",[200,310,311],{},"zod"," 来定义验证模式。",[204,314,315],{},[210,316,212],{},[214,318,320],{"className":216,"code":319,"language":218,"meta":219,"style":219},"app.get(\"/\", async (event) => {\n  const body = await readValidatedBody(event, (body) => {\n    return typeof body === \"object\" && body !== null;\n  });\n});\n",[200,321,322,346,370,401,407],{"__ignoreMap":219},[223,323,324,326,328,330,332,334,336,338,340,342,344],{"class":225,"line":226},[223,325,230],{"class":229},[223,327,234],{"class":233},[223,329,237],{"class":229},[223,331,241],{"class":240},[223,333,244],{"class":229},[223,335,248],{"class":247},[223,337,251],{"class":229},[223,339,255],{"class":254},[223,341,258],{"class":229},[223,343,261],{"class":247},[223,345,264],{"class":229},[223,347,348,350,352,354,356,359,362,364,366,368],{"class":225,"line":267},[223,349,270],{"class":247},[223,351,274],{"class":273},[223,353,277],{"class":247},[223,355,280],{"class":247},[223,357,358],{"class":233}," readValidatedBody",[223,360,361],{"class":229},"(event, (",[223,363,193],{"class":254},[223,365,258],{"class":229},[223,367,261],{"class":247},[223,369,264],{"class":229},[223,371,372,375,378,381,384,387,390,392,395,398],{"class":225,"line":289},[223,373,374],{"class":247},"    return",[223,376,377],{"class":247}," typeof",[223,379,380],{"class":229}," body ",[223,382,383],{"class":247},"===",[223,385,386],{"class":240}," \"object\"",[223,388,389],{"class":247}," &&",[223,391,380],{"class":229},[223,393,394],{"class":247},"!==",[223,396,397],{"class":273}," null",[223,399,400],{"class":229},";\n",[223,402,404],{"class":225,"line":403},4,[223,405,406],{"class":229},"  });\n",[223,408,410],{"class":225,"line":409},5,[223,411,292],{"class":229},[204,413,414],{},[210,415,212],{},[214,417,419],{"className":216,"code":418,"language":218,"meta":219,"style":219},"import { z } from \"zod\";\napp.get(\"/\", async (event) => {\n  const objectSchema = z.object({\n    name: z.string().min(3).max(20),\n    age: z.number({ coerce: true }).positive().int(),\n  });\n  const body = await readValidatedBody(event, objectSchema);\n});\n",[200,420,421,437,461,479,512,540,545,561],{"__ignoreMap":219},[223,422,423,426,429,432,435],{"class":225,"line":226},[223,424,425],{"class":247},"import",[223,427,428],{"class":229}," { z } ",[223,430,431],{"class":247},"from",[223,433,434],{"class":240}," \"zod\"",[223,436,400],{"class":229},[223,438,439,441,443,445,447,449,451,453,455,457,459],{"class":225,"line":267},[223,440,230],{"class":229},[223,442,234],{"class":233},[223,444,237],{"class":229},[223,446,241],{"class":240},[223,448,244],{"class":229},[223,450,248],{"class":247},[223,452,251],{"class":229},[223,454,255],{"class":254},[223,456,258],{"class":229},[223,458,261],{"class":247},[223,460,264],{"class":229},[223,462,463,465,468,470,473,476],{"class":225,"line":289},[223,464,270],{"class":247},[223,466,467],{"class":273}," objectSchema",[223,469,277],{"class":247},[223,471,472],{"class":229}," z.",[223,474,475],{"class":233},"object",[223,477,478],{"class":229},"({\n",[223,480,481,484,487,490,493,495,498,501,504,506,509],{"class":225,"line":403},[223,482,483],{"class":229},"    name: z.",[223,485,486],{"class":233},"string",[223,488,489],{"class":229},"().",[223,491,492],{"class":233},"min",[223,494,237],{"class":229},[223,496,497],{"class":273},"3",[223,499,500],{"class":229},").",[223,502,503],{"class":233},"max",[223,505,237],{"class":229},[223,507,508],{"class":273},"20",[223,510,511],{"class":229},"),\n",[223,513,514,517,520,523,526,529,532,534,537],{"class":225,"line":409},[223,515,516],{"class":229},"    age: z.",[223,518,519],{"class":233},"number",[223,521,522],{"class":229},"({ coerce: ",[223,524,525],{"class":273},"true",[223,527,528],{"class":229}," }).",[223,530,531],{"class":233},"positive",[223,533,489],{"class":229},[223,535,536],{"class":233},"int",[223,538,539],{"class":229},"(),\n",[223,541,543],{"class":225,"line":542},6,[223,544,406],{"class":229},[223,546,548,550,552,554,556,558],{"class":225,"line":547},7,[223,549,270],{"class":247},[223,551,274],{"class":273},[223,553,277],{"class":247},[223,555,280],{"class":247},[223,557,358],{"class":233},[223,559,560],{"class":229},"(event, objectSchema);\n",[223,562,564],{"class":225,"line":563},8,[223,565,292],{"class":229},[191,567,569],{"id":568},"cache","Cache",[196,571,573],{"id":572},"handlecacheheadersevent-opts",[200,574,575],{},"handleCacheHeaders(event, opts)",[204,577,578,579,582,583,586],{},"检查请求缓存头（",[200,580,581],{},"If-Modified-Since","）并添加缓存响应头（Last-Modified，Cache-Control）。注意：默认会添加 ",[200,584,585],{},"public"," 缓存控制。",[191,588,589],{"id":589},"更多请求工具",[196,591,593],{"id":592},"assertmethodevent-expected-allowhead",[200,594,595],{},"assertMethod(event, expected, allowHead?)",[204,597,598,599,602],{},"断言传入请求的方法是否为预期类型，使用 ",[200,600,601],{},"isMethod"," 进行检查。",[204,604,605],{},"如果请求方法不被允许，将抛出 405 错误，消息为 \"HTTP method is not allowed\"。",[204,607,608,609,612,613,615,616,619,620,623],{},"如果 ",[200,610,611],{},"allowHead"," 为 ",[200,614,525],{},"，且预期方法为 ",[200,617,618],{},"GET","，则允许 ",[200,621,622],{},"HEAD"," 请求通过。",[204,625,626],{},[210,627,212],{},[214,629,631],{"className":216,"code":630,"language":218,"meta":219,"style":219},"app.get(\"/\", (event) => {\n  assertMethod(event, \"GET\");\n  // 处理 GET 请求，否则抛出 405 错误\n});\n",[200,632,633,654,668,674],{"__ignoreMap":219},[223,634,635,637,639,641,643,646,648,650,652],{"class":225,"line":226},[223,636,230],{"class":229},[223,638,234],{"class":233},[223,640,237],{"class":229},[223,642,241],{"class":240},[223,644,645],{"class":229},", (",[223,647,255],{"class":254},[223,649,258],{"class":229},[223,651,261],{"class":247},[223,653,264],{"class":229},[223,655,656,659,662,665],{"class":225,"line":267},[223,657,658],{"class":233},"  assertMethod",[223,660,661],{"class":229},"(event, ",[223,663,664],{"class":240},"\"GET\"",[223,666,667],{"class":229},");\n",[223,669,670],{"class":225,"line":289},[223,671,673],{"class":672},"sCsY4","  // 处理 GET 请求，否则抛出 405 错误\n",[223,675,676],{"class":225,"line":403},[223,677,292],{"class":229},[196,679,681],{"id":680},"getqueryevent",[200,682,683],{},"getQuery(event)",[204,685,686],{},"从请求 URL 获取解析后的查询字符串对象。",[204,688,689],{},[210,690,212],{},[214,692,694],{"className":216,"code":693,"language":218,"meta":219,"style":219},"app.get(\"/\", (event) => {\n  const query = getQuery(event); // { key: \"value\", key2: [\"value1\", \"value2\"] }\n});\n",[200,695,696,716,734],{"__ignoreMap":219},[223,697,698,700,702,704,706,708,710,712,714],{"class":225,"line":226},[223,699,230],{"class":229},[223,701,234],{"class":233},[223,703,237],{"class":229},[223,705,241],{"class":240},[223,707,645],{"class":229},[223,709,255],{"class":254},[223,711,258],{"class":229},[223,713,261],{"class":247},[223,715,264],{"class":229},[223,717,718,720,723,725,728,731],{"class":225,"line":267},[223,719,270],{"class":247},[223,721,722],{"class":273}," query",[223,724,277],{"class":247},[223,726,727],{"class":233}," getQuery",[223,729,730],{"class":229},"(event); ",[223,732,733],{"class":672},"// { key: \"value\", key2: [\"value1\", \"value2\"] }\n",[223,735,736],{"class":225,"line":289},[223,737,292],{"class":229},[196,739,741],{"id":740},"getrequesthostevent-opts-xforwardedhost",[200,742,743],{},"getRequestHost(event, opts: { xForwardedHost? })",[204,745,746],{},"获取请求的主机名。",[204,748,608,749,612,752,754,755,758],{},[200,750,751],{},"xForwardedHost",[200,753,525],{},"，则优先使用 ",[200,756,757],{},"x-forwarded-host"," 请求头（若存在）。",[204,760,761],{},"若未找到主机头，则默认为 \"localhost\"。",[204,763,764],{},[210,765,212],{},[214,767,769],{"className":216,"code":768,"language":218,"meta":219,"style":219},"app.get(\"/\", (event) => {\n  const host = getRequestHost(event); // \"example.com\"\n});\n",[200,770,771,791,808],{"__ignoreMap":219},[223,772,773,775,777,779,781,783,785,787,789],{"class":225,"line":226},[223,774,230],{"class":229},[223,776,234],{"class":233},[223,778,237],{"class":229},[223,780,241],{"class":240},[223,782,645],{"class":229},[223,784,255],{"class":254},[223,786,258],{"class":229},[223,788,261],{"class":247},[223,790,264],{"class":229},[223,792,793,795,798,800,803,805],{"class":225,"line":267},[223,794,270],{"class":247},[223,796,797],{"class":273}," host",[223,799,277],{"class":247},[223,801,802],{"class":233}," getRequestHost",[223,804,730],{"class":229},[223,806,807],{"class":672},"// \"example.com\"\n",[223,809,810],{"class":225,"line":289},[223,811,292],{"class":229},[196,813,815],{"id":814},"getrequestipevent",[200,816,817],{},"getRequestIP(event)",[204,819,820],{},"尝试从传入请求中获取客户端 IP 地址。",[204,822,608,823,612,826,754,828,758],{},[200,824,825],{},"xForwardedFor",[200,827,525],{},[200,829,830],{},"x-forwarded-for",[204,832,833,834,837],{},"如果无法确定 IP，则返回 ",[200,835,836],{},"undefined","。",[204,839,840],{},[210,841,212],{},[214,843,845],{"className":216,"code":844,"language":218,"meta":219,"style":219},"app.get(\"/\", (event) => {\n  const ip = getRequestIP(event); // \"192.0.2.0\"\n});\n",[200,846,847,867,884],{"__ignoreMap":219},[223,848,849,851,853,855,857,859,861,863,865],{"class":225,"line":226},[223,850,230],{"class":229},[223,852,234],{"class":233},[223,854,237],{"class":229},[223,856,241],{"class":240},[223,858,645],{"class":229},[223,860,255],{"class":254},[223,862,258],{"class":229},[223,864,261],{"class":247},[223,866,264],{"class":229},[223,868,869,871,874,876,879,881],{"class":225,"line":267},[223,870,270],{"class":247},[223,872,873],{"class":273}," ip",[223,875,277],{"class":247},[223,877,878],{"class":233}," getRequestIP",[223,880,730],{"class":229},[223,882,883],{"class":672},"// \"192.0.2.0\"\n",[223,885,886],{"class":225,"line":289},[223,887,292],{"class":229},[196,889,891],{"id":890},"getrequestprotocolevent-opts-xforwardedproto",[200,892,893],{},"getRequestProtocol(event, opts: { xForwardedProto? })",[204,895,896],{},"获取请求协议。",[204,898,608,899,902,903,906,907,910],{},[200,900,901],{},"x-forwarded-proto"," 请求头设置为 \"https\"，则返回 \"https\"。可以通过将 ",[200,904,905],{},"xForwardedProto"," 设为 ",[200,908,909],{},"false"," 来禁用此行为。",[204,912,913],{},"如果无法确定协议，则默认为 \"http\"。",[204,915,916],{},[210,917,212],{},[214,919,921],{"className":216,"code":920,"language":218,"meta":219,"style":219},"app.get(\"/\", (event) => {\n  const protocol = getRequestProtocol(event); // \"https\"\n});\n",[200,922,923,943,960],{"__ignoreMap":219},[223,924,925,927,929,931,933,935,937,939,941],{"class":225,"line":226},[223,926,230],{"class":229},[223,928,234],{"class":233},[223,930,237],{"class":229},[223,932,241],{"class":240},[223,934,645],{"class":229},[223,936,255],{"class":254},[223,938,258],{"class":229},[223,940,261],{"class":247},[223,942,264],{"class":229},[223,944,945,947,950,952,955,957],{"class":225,"line":267},[223,946,270],{"class":247},[223,948,949],{"class":273}," protocol",[223,951,277],{"class":247},[223,953,954],{"class":233}," getRequestProtocol",[223,956,730],{"class":229},[223,958,959],{"class":672},"// \"https\"\n",[223,961,962],{"class":225,"line":289},[223,963,292],{"class":229},[196,965,967],{"id":966},"getrequesturlevent-opts-xforwardedhost-xforwardedproto",[200,968,969],{},"getRequestURL(event, opts: { xForwardedHost?, xForwardedProto? })",[204,971,972],{},"生成完整的传入请求 URL。",[204,974,608,975,612,977,979,980,758],{},[200,976,751],{},[200,978,525],{},"，则使用 ",[200,981,757],{},[204,983,608,984,612,986,988,989,991],{},[200,985,905],{},[200,987,909],{},"，则不使用 ",[200,990,901],{}," 请求头。",[204,993,994],{},[210,995,212],{},[214,997,999],{"className":216,"code":998,"language":218,"meta":219,"style":219},"app.get(\"/\", (event) => {\n  const url = getRequestURL(event); // \"https://example.com/path\"\n});\n",[200,1000,1001,1021,1038],{"__ignoreMap":219},[223,1002,1003,1005,1007,1009,1011,1013,1015,1017,1019],{"class":225,"line":226},[223,1004,230],{"class":229},[223,1006,234],{"class":233},[223,1008,237],{"class":229},[223,1010,241],{"class":240},[223,1012,645],{"class":229},[223,1014,255],{"class":254},[223,1016,258],{"class":229},[223,1018,261],{"class":247},[223,1020,264],{"class":229},[223,1022,1023,1025,1028,1030,1033,1035],{"class":225,"line":267},[223,1024,270],{"class":247},[223,1026,1027],{"class":273}," url",[223,1029,277],{"class":247},[223,1031,1032],{"class":233}," getRequestURL",[223,1034,730],{"class":229},[223,1036,1037],{"class":672},"// \"https://example.com/path\"\n",[223,1039,1040],{"class":225,"line":289},[223,1041,292],{"class":229},[196,1043,1045],{"id":1044},"getrouterparamevent-name-opts-decode",[200,1046,1047],{},"getRouterParam(event, name, opts: { decode? })",[204,1049,1050],{},"根据名称获取匹配的路由参数。",[204,1052,608,1053,1056,1057,1059,1060,1063],{},[200,1054,1055],{},"decode"," 选项为 ",[200,1058,525],{},"，将使用 ",[200,1061,1062],{},"decodeURI"," 对匹配到的路由参数进行解码。",[204,1065,1066],{},[210,1067,212],{},[214,1069,1071],{"className":216,"code":1070,"language":218,"meta":219,"style":219},"app.get(\"/\", (event) => {\n  const param = getRouterParam(event, \"key\");\n});\n",[200,1072,1073,1093,1112],{"__ignoreMap":219},[223,1074,1075,1077,1079,1081,1083,1085,1087,1089,1091],{"class":225,"line":226},[223,1076,230],{"class":229},[223,1078,234],{"class":233},[223,1080,237],{"class":229},[223,1082,241],{"class":240},[223,1084,645],{"class":229},[223,1086,255],{"class":254},[223,1088,258],{"class":229},[223,1090,261],{"class":247},[223,1092,264],{"class":229},[223,1094,1095,1097,1100,1102,1105,1107,1110],{"class":225,"line":267},[223,1096,270],{"class":247},[223,1098,1099],{"class":273}," param",[223,1101,277],{"class":247},[223,1103,1104],{"class":233}," getRouterParam",[223,1106,661],{"class":229},[223,1108,1109],{"class":240},"\"key\"",[223,1111,667],{"class":229},[223,1113,1114],{"class":225,"line":289},[223,1115,292],{"class":229},[196,1117,1119],{"id":1118},"getrouterparamsevent-opts-decode",[200,1120,1121],{},"getRouterParams(event, opts: { decode? })",[204,1123,1124],{},"获取匹配的路由参数集合。",[204,1126,608,1127,1056,1129,1059,1131,1134],{},[200,1128,1055],{},[200,1130,525],{},[200,1132,1133],{},"decodeURIComponent"," 对所有匹配路由参数进行解码。",[204,1136,1137],{},[210,1138,212],{},[214,1140,1142],{"className":216,"code":1141,"language":218,"meta":219,"style":219},"app.get(\"/\", (event) => {\n  const params = getRouterParams(event); // { key: \"value\" }\n});\n",[200,1143,1144,1164,1181],{"__ignoreMap":219},[223,1145,1146,1148,1150,1152,1154,1156,1158,1160,1162],{"class":225,"line":226},[223,1147,230],{"class":229},[223,1149,234],{"class":233},[223,1151,237],{"class":229},[223,1153,241],{"class":240},[223,1155,645],{"class":229},[223,1157,255],{"class":254},[223,1159,258],{"class":229},[223,1161,261],{"class":247},[223,1163,264],{"class":229},[223,1165,1166,1168,1171,1173,1176,1178],{"class":225,"line":267},[223,1167,270],{"class":247},[223,1169,1170],{"class":273}," params",[223,1172,277],{"class":247},[223,1174,1175],{"class":233}," getRouterParams",[223,1177,730],{"class":229},[223,1179,1180],{"class":672},"// { key: \"value\" }\n",[223,1182,1183],{"class":225,"line":289},[223,1184,292],{"class":229},[196,1186,1188],{"id":1187},"getvalidatedqueryevent-validate",[200,1189,1190],{},"getValidatedQuery(event, validate)",[204,1192,1193],{},"获取经过验证函数验证后的请求 URL 查询参数。",[204,1195,1196,1197,1199],{},"您可以使用一个简单的函数来验证查询对象，或者使用一个兼容标准架构的库，如 ",[200,1198,311],{}," 来定义架构。",[204,1201,1202],{},[210,1203,212],{},[214,1205,1207],{"className":216,"code":1206,"language":218,"meta":219,"style":219},"app.get(\"/\", async (event) => {\n  const query = await getValidatedQuery(event, (data) => {\n    return \"key\" in data && typeof data.key === \"string\";\n  });\n});\n",[200,1208,1209,1233,1257,1285,1289],{"__ignoreMap":219},[223,1210,1211,1213,1215,1217,1219,1221,1223,1225,1227,1229,1231],{"class":225,"line":226},[223,1212,230],{"class":229},[223,1214,234],{"class":233},[223,1216,237],{"class":229},[223,1218,241],{"class":240},[223,1220,244],{"class":229},[223,1222,248],{"class":247},[223,1224,251],{"class":229},[223,1226,255],{"class":254},[223,1228,258],{"class":229},[223,1230,261],{"class":247},[223,1232,264],{"class":229},[223,1234,1235,1237,1239,1241,1243,1246,1248,1251,1253,1255],{"class":225,"line":267},[223,1236,270],{"class":247},[223,1238,722],{"class":273},[223,1240,277],{"class":247},[223,1242,280],{"class":247},[223,1244,1245],{"class":233}," getValidatedQuery",[223,1247,361],{"class":229},[223,1249,1250],{"class":254},"data",[223,1252,258],{"class":229},[223,1254,261],{"class":247},[223,1256,264],{"class":229},[223,1258,1259,1261,1264,1267,1270,1273,1275,1278,1280,1283],{"class":225,"line":289},[223,1260,374],{"class":247},[223,1262,1263],{"class":240}," \"key\"",[223,1265,1266],{"class":247}," in",[223,1268,1269],{"class":229}," data ",[223,1271,1272],{"class":247},"&&",[223,1274,377],{"class":247},[223,1276,1277],{"class":229}," data.key ",[223,1279,383],{"class":247},[223,1281,1282],{"class":240}," \"string\"",[223,1284,400],{"class":229},[223,1286,1287],{"class":225,"line":403},[223,1288,406],{"class":229},[223,1290,1291],{"class":225,"line":409},[223,1292,292],{"class":229},[204,1294,1295],{},[210,1296,212],{},[214,1298,1300],{"className":216,"code":1299,"language":218,"meta":219,"style":219},"import { z } from \"zod\";\napp.get(\"/\", async (event) => {\n  const query = await getValidatedQuery(\n    event,\n    z.object({\n      key: z.string(),\n    }),\n  );\n});\n",[200,1301,1302,1314,1338,1353,1358,1367,1376,1381,1386],{"__ignoreMap":219},[223,1303,1304,1306,1308,1310,1312],{"class":225,"line":226},[223,1305,425],{"class":247},[223,1307,428],{"class":229},[223,1309,431],{"class":247},[223,1311,434],{"class":240},[223,1313,400],{"class":229},[223,1315,1316,1318,1320,1322,1324,1326,1328,1330,1332,1334,1336],{"class":225,"line":267},[223,1317,230],{"class":229},[223,1319,234],{"class":233},[223,1321,237],{"class":229},[223,1323,241],{"class":240},[223,1325,244],{"class":229},[223,1327,248],{"class":247},[223,1329,251],{"class":229},[223,1331,255],{"class":254},[223,1333,258],{"class":229},[223,1335,261],{"class":247},[223,1337,264],{"class":229},[223,1339,1340,1342,1344,1346,1348,1350],{"class":225,"line":289},[223,1341,270],{"class":247},[223,1343,722],{"class":273},[223,1345,277],{"class":247},[223,1347,280],{"class":247},[223,1349,1245],{"class":233},[223,1351,1352],{"class":229},"(\n",[223,1354,1355],{"class":225,"line":403},[223,1356,1357],{"class":229},"    event,\n",[223,1359,1360,1363,1365],{"class":225,"line":409},[223,1361,1362],{"class":229},"    z.",[223,1364,475],{"class":233},[223,1366,478],{"class":229},[223,1368,1369,1372,1374],{"class":225,"line":542},[223,1370,1371],{"class":229},"      key: z.",[223,1373,486],{"class":233},[223,1375,539],{"class":229},[223,1377,1378],{"class":225,"line":547},[223,1379,1380],{"class":229},"    }),\n",[223,1382,1383],{"class":225,"line":563},[223,1384,1385],{"class":229},"  );\n",[223,1387,1389],{"class":225,"line":1388},9,[223,1390,292],{"class":229},[196,1392,1394],{"id":1393},"getvalidatedrouterparamsevent-validate-opts-decode",[200,1395,1396],{},"getValidatedRouterParams(event, validate, opts: { decode? })",[204,1398,1399],{},"获取匹配的路由参数并使用验证函数验证。",[204,1401,608,1402,1056,1404,1059,1406,1408],{},[200,1403,1055],{},[200,1405,525],{},[200,1407,1062],{}," 对匹配路由参数进行解码。",[204,1410,1411,1412,1414],{},"你可以使用一个简单的函数来验证参数对象，或者使用与标准模式兼容的库（如 ",[200,1413,311],{},"）来定义模式。",[204,1416,1417],{},[210,1418,212],{},[214,1420,1422],{"className":216,"code":1421,"language":218,"meta":219,"style":219},"app.get(\"/\", async (event) => {\n  const params = await getValidatedRouterParams(event, (data) => {\n    return \"key\" in data && typeof data.key === \"string\";\n  });\n});\n",[200,1423,1424,1448,1471,1493,1497],{"__ignoreMap":219},[223,1425,1426,1428,1430,1432,1434,1436,1438,1440,1442,1444,1446],{"class":225,"line":226},[223,1427,230],{"class":229},[223,1429,234],{"class":233},[223,1431,237],{"class":229},[223,1433,241],{"class":240},[223,1435,244],{"class":229},[223,1437,248],{"class":247},[223,1439,251],{"class":229},[223,1441,255],{"class":254},[223,1443,258],{"class":229},[223,1445,261],{"class":247},[223,1447,264],{"class":229},[223,1449,1450,1452,1454,1456,1458,1461,1463,1465,1467,1469],{"class":225,"line":267},[223,1451,270],{"class":247},[223,1453,1170],{"class":273},[223,1455,277],{"class":247},[223,1457,280],{"class":247},[223,1459,1460],{"class":233}," getValidatedRouterParams",[223,1462,361],{"class":229},[223,1464,1250],{"class":254},[223,1466,258],{"class":229},[223,1468,261],{"class":247},[223,1470,264],{"class":229},[223,1472,1473,1475,1477,1479,1481,1483,1485,1487,1489,1491],{"class":225,"line":289},[223,1474,374],{"class":247},[223,1476,1263],{"class":240},[223,1478,1266],{"class":247},[223,1480,1269],{"class":229},[223,1482,1272],{"class":247},[223,1484,377],{"class":247},[223,1486,1277],{"class":229},[223,1488,383],{"class":247},[223,1490,1282],{"class":240},[223,1492,400],{"class":229},[223,1494,1495],{"class":225,"line":403},[223,1496,406],{"class":229},[223,1498,1499],{"class":225,"line":409},[223,1500,292],{"class":229},[204,1502,1503],{},[210,1504,212],{},[214,1506,1508],{"className":216,"code":1507,"language":218,"meta":219,"style":219},"import { z } from \"zod\";\napp.get(\"/\", async (event) => {\n  const params = await getValidatedRouterParams(\n    event,\n    z.object({\n      key: z.string(),\n    }),\n  );\n});\n",[200,1509,1510,1522,1546,1560,1564,1572,1580,1584,1588],{"__ignoreMap":219},[223,1511,1512,1514,1516,1518,1520],{"class":225,"line":226},[223,1513,425],{"class":247},[223,1515,428],{"class":229},[223,1517,431],{"class":247},[223,1519,434],{"class":240},[223,1521,400],{"class":229},[223,1523,1524,1526,1528,1530,1532,1534,1536,1538,1540,1542,1544],{"class":225,"line":267},[223,1525,230],{"class":229},[223,1527,234],{"class":233},[223,1529,237],{"class":229},[223,1531,241],{"class":240},[223,1533,244],{"class":229},[223,1535,248],{"class":247},[223,1537,251],{"class":229},[223,1539,255],{"class":254},[223,1541,258],{"class":229},[223,1543,261],{"class":247},[223,1545,264],{"class":229},[223,1547,1548,1550,1552,1554,1556,1558],{"class":225,"line":289},[223,1549,270],{"class":247},[223,1551,1170],{"class":273},[223,1553,277],{"class":247},[223,1555,280],{"class":247},[223,1557,1460],{"class":233},[223,1559,1352],{"class":229},[223,1561,1562],{"class":225,"line":403},[223,1563,1357],{"class":229},[223,1565,1566,1568,1570],{"class":225,"line":409},[223,1567,1362],{"class":229},[223,1569,475],{"class":233},[223,1571,478],{"class":229},[223,1573,1574,1576,1578],{"class":225,"line":542},[223,1575,1371],{"class":229},[223,1577,486],{"class":233},[223,1579,539],{"class":229},[223,1581,1582],{"class":225,"line":547},[223,1583,1380],{"class":229},[223,1585,1586],{"class":225,"line":563},[223,1587,1385],{"class":229},[223,1589,1590],{"class":225,"line":1388},[223,1591,292],{"class":229},[196,1593,1595],{"id":1594},"ismethodevent-expected-allowhead",[200,1596,1597],{},"isMethod(event, expected, allowHead?)",[204,1599,1600],{},"检查传入请求的方法是否为预期类型。",[204,1602,608,1603,612,1605,615,1607,619,1609,623],{},[200,1604,611],{},[200,1606,525],{},[200,1608,618],{},[200,1610,622],{},[204,1612,1613],{},[210,1614,212],{},[214,1616,1618],{"className":216,"code":1617,"language":218,"meta":219,"style":219},"app.get(\"/\", (event) => {\n  if (isMethod(event, \"GET\")) {\n    // 处理 GET 请求\n  } else if (isMethod(event, [\"POST\", \"PUT\"])) {\n    // 处理 POST 或 PUT 请求\n  }\n});\n",[200,1619,1620,1640,1656,1661,1690,1695,1700],{"__ignoreMap":219},[223,1621,1622,1624,1626,1628,1630,1632,1634,1636,1638],{"class":225,"line":226},[223,1623,230],{"class":229},[223,1625,234],{"class":233},[223,1627,237],{"class":229},[223,1629,241],{"class":240},[223,1631,645],{"class":229},[223,1633,255],{"class":254},[223,1635,258],{"class":229},[223,1637,261],{"class":247},[223,1639,264],{"class":229},[223,1641,1642,1645,1647,1649,1651,1653],{"class":225,"line":267},[223,1643,1644],{"class":247},"  if",[223,1646,251],{"class":229},[223,1648,601],{"class":233},[223,1650,661],{"class":229},[223,1652,664],{"class":240},[223,1654,1655],{"class":229},")) {\n",[223,1657,1658],{"class":225,"line":289},[223,1659,1660],{"class":672},"    // 处理 GET 请求\n",[223,1662,1663,1666,1669,1672,1674,1676,1679,1682,1684,1687],{"class":225,"line":403},[223,1664,1665],{"class":229},"  } ",[223,1667,1668],{"class":247},"else",[223,1670,1671],{"class":247}," if",[223,1673,251],{"class":229},[223,1675,601],{"class":233},[223,1677,1678],{"class":229},"(event, [",[223,1680,1681],{"class":240},"\"POST\"",[223,1683,244],{"class":229},[223,1685,1686],{"class":240},"\"PUT\"",[223,1688,1689],{"class":229},"])) {\n",[223,1691,1692],{"class":225,"line":409},[223,1693,1694],{"class":672},"    // 处理 POST 或 PUT 请求\n",[223,1696,1697],{"class":225,"line":542},[223,1698,1699],{"class":229},"  }\n",[223,1701,1702],{"class":225,"line":547},[223,1703,292],{"class":229},[196,1705,1707],{"id":1706},"torequestinput-options",[200,1708,1709],{},"toRequest(input, options?)",[204,1711,1712,1713,837],{},"将输入转换为网络 ",[1714,1715,1719],"a",{"href":1716,"rel":1717},"https://developer.mozilla.org/en-US/docs/Web/API/Request",[1718],"nofollow","Request",[204,1721,1722],{},"如果输入是相对 URL，它将根据头部规范化为完整路径。",[204,1724,1725],{},"如果输入已经是 Request 且未提供选项，则将原样返回。",[196,1727,1729],{"id":1728},"getrequestfingerprintevent-opts",[200,1730,1731],{},"getRequestFingerprint(event, opts)",[204,1733,1734],{},"获取传入请求的唯一指纹。",[1736,1737,1738],"style",{},"html pre.shiki code .slsVL, html code.shiki .slsVL{--shiki-light:#24292E;--shiki-default:#E1E4E8;--shiki-dark:#E1E4E8}html pre.shiki code .shcOC, html code.shiki .shcOC{--shiki-light:#6F42C1;--shiki-default:#B392F0;--shiki-dark:#B392F0}html pre.shiki code .sfrk1, html code.shiki .sfrk1{--shiki-light:#032F62;--shiki-default:#9ECBFF;--shiki-dark:#9ECBFF}html pre.shiki code .so5gQ, html code.shiki .so5gQ{--shiki-light:#D73A49;--shiki-default:#F97583;--shiki-dark:#F97583}html pre.shiki code .sQHwn, html code.shiki .sQHwn{--shiki-light:#E36209;--shiki-default:#FFAB70;--shiki-dark:#FFAB70}html pre.shiki code .suiK_, html code.shiki .suiK_{--shiki-light:#005CC5;--shiki-default:#79B8FF;--shiki-dark:#79B8FF}html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html pre.shiki code .sCsY4, html code.shiki .sCsY4{--shiki-light:#6A737D;--shiki-default:#6A737D;--shiki-dark:#6A737D}",{"title":219,"searchDepth":267,"depth":267,"links":1740},[1741,1745,1748],{"id":193,"depth":267,"text":194,"children":1742},[1743,1744],{"id":198,"depth":289,"text":202},{"id":295,"depth":289,"text":298},{"id":568,"depth":267,"text":569,"children":1746},[1747],{"id":572,"depth":289,"text":575},{"id":589,"depth":267,"text":589,"children":1749},[1750,1751,1752,1753,1754,1755,1756,1757,1758,1759,1760,1761,1762],{"id":592,"depth":289,"text":595},{"id":680,"depth":289,"text":683},{"id":740,"depth":289,"text":743},{"id":814,"depth":289,"text":817},{"id":890,"depth":289,"text":893},{"id":966,"depth":289,"text":969},{"id":1044,"depth":289,"text":1047},{"id":1118,"depth":289,"text":1121},{"id":1187,"depth":289,"text":1190},{"id":1393,"depth":289,"text":1396},{"id":1594,"depth":289,"text":1597},{"id":1706,"depth":289,"text":1709},{"id":1728,"depth":289,"text":1731},"H3 请求工具。","md",{"automd":1766,"icon":102},true,{"icon":102},{"title":99,"description":1763},"FCOkkQ3mYxte_1b1G_tT2Ud1eQIB-L2tqAYfEfzwJFI",[1771,1772],{"title":92,"path":93,"stem":94,"description":219,"icon":97,"children":-1},{"title":104,"path":105,"stem":106,"description":1773,"icon":107,"children":-1},"H3 响应实用工具。",1757861510288]